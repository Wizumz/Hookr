{"version":3,"file":"index-956fb51d.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/dataService.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// LocalStorage-based data service for RipRap fishing app\n// Maintains same API as previous version but stores data locally\n\n// Generate random emoji identifier for comments\nconst COMMENT_EMOJIS = ['🐟', '🎣', '🌊', '⭐', '🔥', '💯', '👍', '🎯', '🌟', '💪'];\n\nexport const generateEmojiIdentifier = () => {\n    return COMMENT_EMOJIS[Math.floor(Math.random() * COMMENT_EMOJIS.length)];\n};\n\n// Helper function to calculate distance between two points (Haversine formula)\nexport function calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 3959; // Earth's radius in miles\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n        Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n        Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c; // Distance in miles\n}\n\n// Local storage keys\nconst STORAGE_KEYS = {\n    POSTS: 'riprap_posts',\n    COMMENTS: 'riprap_comments',\n    VOTES: 'riprap_votes',\n    REPORTS: 'riprap_reports'\n};\n\n// Helper functions for localStorage\nconst getFromStorage = (key) => {\n    try {\n        const data = localStorage.getItem(key);\n        return data ? JSON.parse(data) : [];\n    } catch (error) {\n        console.error(`Error reading from localStorage (${key}):`, error);\n        return [];\n    }\n};\n\nconst saveToStorage = (key, data) => {\n    try {\n        localStorage.setItem(key, JSON.stringify(data));\n    } catch (error) {\n        console.error(`Error saving to localStorage (${key}):`, error);\n    }\n};\n\n// Generate unique IDs\nconst generateId = () => {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n// Posts operations\nexport const postsService = {\n    // Get posts within radius\n    async getNearbyPosts(latitude, longitude, radiusMiles = 5) {\n        try {\n            const allPosts = getFromStorage(STORAGE_KEYS.POSTS);\n            \n            const nearbyPosts = allPosts.filter(post => {\n                if (!post.latitude || !post.longitude) return false;\n                \n                const distance = calculateDistance(\n                    latitude, longitude,\n                    post.latitude, post.longitude\n                );\n                \n                return distance <= radiusMiles;\n            }).map(post => {\n                // Add distance calculation\n                const distance = calculateDistance(\n                    latitude, longitude,\n                    post.latitude, post.longitude\n                );\n                \n                return {\n                    ...post,\n                    distance_miles: Math.round(distance * 10) / 10\n                };\n            });\n\n            // Sort by creation time (newest first)\n            nearbyPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            \n            return nearbyPosts;\n        } catch (error) {\n            console.error('Error fetching nearby posts:', error);\n            return [];\n        }\n    },\n\n    // Create a new post\n    async createPost(content, username, userColor, latitude, longitude, locationName = '') {\n        try {\n            const posts = getFromStorage(STORAGE_KEYS.POSTS);\n            \n            const newPost = {\n                id: generateId(),\n                content,\n                username,\n                user_color: userColor,\n                latitude,\n                longitude,\n                location_name: locationName,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString(),\n                upvotes: 0,\n                downvotes: 0,\n                vote_count: 0,\n                comment_count: 0\n            };\n\n            posts.unshift(newPost); // Add to beginning\n            saveToStorage(STORAGE_KEYS.POSTS, posts);\n            \n            return newPost;\n        } catch (error) {\n            console.error('Error creating post:', error);\n            throw error;\n        }\n    },\n\n    // Get a single post\n    async getPost(postId) {\n        try {\n            const posts = getFromStorage(STORAGE_KEYS.POSTS);\n            return posts.find(post => post.id === postId) || null;\n        } catch (error) {\n            console.error('Error fetching post:', error);\n            return null;\n        }\n    },\n\n    // Update post vote counts (called by votes service)\n    updatePostVoteCounts(postId, upvotes, downvotes) {\n        try {\n            const posts = getFromStorage(STORAGE_KEYS.POSTS);\n            const postIndex = posts.findIndex(post => post.id === postId);\n            \n            if (postIndex !== -1) {\n                posts[postIndex].upvotes = upvotes;\n                posts[postIndex].downvotes = downvotes;\n                posts[postIndex].vote_count = upvotes - downvotes;\n                posts[postIndex].updated_at = new Date().toISOString();\n                saveToStorage(STORAGE_KEYS.POSTS, posts);\n            }\n        } catch (error) {\n            console.error('Error updating post vote counts:', error);\n        }\n    },\n\n    // Update post comment count (called by comments service)\n    updatePostCommentCount(postId, commentCount) {\n        try {\n            const posts = getFromStorage(STORAGE_KEYS.POSTS);\n            const postIndex = posts.findIndex(post => post.id === postId);\n            \n            if (postIndex !== -1) {\n                posts[postIndex].comment_count = commentCount;\n                posts[postIndex].updated_at = new Date().toISOString();\n                saveToStorage(STORAGE_KEYS.POSTS, posts);\n            }\n        } catch (error) {\n            console.error('Error updating post comment count:', error);\n        }\n    }\n};\n\n// Comments operations\nexport const commentsService = {\n    // Get comments for a post\n    async getComments(postId) {\n        try {\n            const allComments = getFromStorage(STORAGE_KEYS.COMMENTS);\n            return allComments\n                .filter(comment => comment.post_id === postId)\n                .sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n            return [];\n        }\n    },\n\n    // Create a comment\n    async createComment(postId, content, username, userColor) {\n        try {\n            const comments = getFromStorage(STORAGE_KEYS.COMMENTS);\n            \n            const newComment = {\n                id: generateId(),\n                post_id: postId,\n                content,\n                username,\n                user_color: userColor,\n                emoji_identifier: generateEmojiIdentifier(),\n                created_at: new Date().toISOString()\n            };\n\n            comments.push(newComment);\n            saveToStorage(STORAGE_KEYS.COMMENTS, comments);\n            \n            // Update post comment count\n            const postComments = comments.filter(c => c.post_id === postId);\n            postsService.updatePostCommentCount(postId, postComments.length);\n            \n            return newComment;\n        } catch (error) {\n            console.error('Error creating comment:', error);\n            throw error;\n        }\n    }\n};\n\n// Votes operations\nexport const votesService = {\n    // Get user's vote for a post\n    async getUserVote(postId, deviceId) {\n        try {\n            const votes = getFromStorage(STORAGE_KEYS.VOTES);\n            const vote = votes.find(v => v.post_id === postId && v.user_device_id === deviceId);\n            return vote?.vote_type || 0;\n        } catch (error) {\n            console.error('Error fetching user vote:', error);\n            return 0;\n        }\n    },\n\n    // Cast a vote (upsert)\n    async castVote(postId, deviceId, voteType) {\n        try {\n            const votes = getFromStorage(STORAGE_KEYS.VOTES);\n            const existingVoteIndex = votes.findIndex(v => \n                v.post_id === postId && v.user_device_id === deviceId\n            );\n\n            if (voteType === 0) {\n                // Remove vote\n                if (existingVoteIndex !== -1) {\n                    votes.splice(existingVoteIndex, 1);\n                }\n            } else {\n                // Add or update vote\n                const voteData = {\n                    post_id: postId,\n                    user_device_id: deviceId,\n                    vote_type: voteType,\n                    created_at: new Date().toISOString()\n                };\n\n                if (existingVoteIndex !== -1) {\n                    votes[existingVoteIndex] = voteData;\n                } else {\n                    votes.push(voteData);\n                }\n            }\n\n            saveToStorage(STORAGE_KEYS.VOTES, votes);\n            \n            // Update post vote counts\n            const postVotes = votes.filter(v => v.post_id === postId);\n            const upvotes = postVotes.filter(v => v.vote_type === 1).length;\n            const downvotes = postVotes.filter(v => v.vote_type === -1).length;\n            postsService.updatePostVoteCounts(postId, upvotes, downvotes);\n            \n            return true;\n        } catch (error) {\n            console.error('Error casting vote:', error);\n            throw error;\n        }\n    },\n\n    // Get votes for multiple posts (for efficiency)\n    async getVotesForPosts(postIds, deviceId) {\n        try {\n            const allVotes = getFromStorage(STORAGE_KEYS.VOTES);\n            const userVotes = {};\n            \n            allVotes.forEach(vote => {\n                if (postIds.includes(vote.post_id) && vote.user_device_id === deviceId) {\n                    userVotes[vote.post_id] = vote.vote_type;\n                }\n            });\n            \n            return userVotes;\n        } catch (error) {\n            console.error('Error fetching votes for posts:', error);\n            return {};\n        }\n    }\n};\n\n// Reports operations\nexport const reportsService = {\n    // Report a post\n    async reportPost(postId, deviceId, reason = '') {\n        try {\n            const reports = getFromStorage(STORAGE_KEYS.REPORTS);\n            \n            // Check if already reported by this device\n            const existingReport = reports.find(r => \n                r.post_id === postId && r.reported_by_device_id === deviceId\n            );\n            \n            if (existingReport) {\n                console.log('Post already reported by this device');\n                return existingReport;\n            }\n            \n            const newReport = {\n                id: generateId(),\n                post_id: postId,\n                reported_by_device_id: deviceId,\n                reason,\n                created_at: new Date().toISOString()\n            };\n\n            reports.push(newReport);\n            saveToStorage(STORAGE_KEYS.REPORTS, reports);\n            \n            return newReport;\n        } catch (error) {\n            console.error('Error reporting post:', error);\n            throw error;\n        }\n    },\n\n    // Report a comment\n    async reportComment(commentId, deviceId, reason = '') {\n        try {\n            const reports = getFromStorage(STORAGE_KEYS.REPORTS);\n            \n            const newReport = {\n                id: generateId(),\n                comment_id: commentId,\n                reported_by_device_id: deviceId,\n                reason,\n                created_at: new Date().toISOString()\n            };\n\n            reports.push(newReport);\n            saveToStorage(STORAGE_KEYS.REPORTS, reports);\n            \n            return newReport;\n        } catch (error) {\n            console.error('Error reporting comment:', error);\n            throw error;\n        }\n    }\n};\n\n// Mock real-time subscriptions (no real-time in localStorage, but maintains API compatibility)\nexport const subscriptionsService = {\n    // Subscribe to posts in a specific area (mock - no real-time updates)\n    subscribeToNearbyPosts(latitude, longitude, radiusMiles, onNewPost, onPostUpdate) {\n        // Return a mock subscription object\n        return {\n            unsubscribe: () => {\n                // Mock unsubscribe\n            }\n        };\n    },\n\n    // Subscribe to comments for a specific post (mock)\n    subscribeToComments(postId, onNewComment) {\n        return {\n            unsubscribe: () => {\n                // Mock unsubscribe\n            }\n        };\n    },\n\n    // Unsubscribe from a channel (mock)\n    unsubscribe(subscription) {\n        if (subscription && subscription.unsubscribe) {\n            subscription.unsubscribe();\n        }\n    }\n};","import React, { useState, useEffect, useRef } from 'react';\nimport { postsService, commentsService, votesService, reportsService, subscriptionsService } from './dataService.js';\n\n// Northeast Striped Bass Fishing Locations\nconst STRIPED_BASS_LOCATIONS = {\n    'montauk-point-ny': { lat: 41.0362, lng: -71.8562, name: 'Montauk Point, NY', state: 'NY' },\n    'cape-cod-ma': { lat: 41.6688, lng: -70.2962, name: 'Cape Cod, MA', state: 'MA' },\n    'block-island-ri': { lat: 41.1775, lng: -71.5773, name: 'Block Island, RI', state: 'RI' },\n    'chesapeake-bay-md': { lat: 38.9784, lng: -76.4951, name: 'Chesapeake Bay, MD', state: 'MD' },\n    'sandy-hook-nj': { lat: 40.4168, lng: -74.0018, name: 'Sandy Hook, NJ', state: 'NJ' },\n    'orient-point-ny': { lat: 41.1615, lng: -72.2351, name: 'Orient Point, NY', state: 'NY' },\n    'race-point-ma': { lat: 42.0654, lng: -70.2457, name: 'Race Point, MA', state: 'MA' },\n    'watch-hill-ri': { lat: 41.3079, lng: -71.8565, name: 'Watch Hill, RI', state: 'RI' },\n    'martha-vineyard-ma': { lat: 41.3888, lng: -70.6420, name: 'Martha\\'s Vineyard, MA', state: 'MA' },\n    'nantucket-ma': { lat: 41.2835, lng: -70.0995, name: 'Nantucket, MA', state: 'MA' },\n    'long-island-sound-ct': { lat: 41.1015, lng: -72.6732, name: 'Long Island Sound, CT', state: 'CT' },\n    'rhode-island-sound-ri': { lat: 41.4221, lng: -71.4774, name: 'Rhode Island Sound, RI', state: 'RI' },\n    'buzzards-bay-ma': { lat: 41.5389, lng: -70.9481, name: 'Buzzards Bay, MA', state: 'MA' },\n    'delaware-bay-de': { lat: 38.9108, lng: -75.1818, name: 'Delaware Bay, DE', state: 'DE' },\n    'hudson-river-ny': { lat: 41.7658, lng: -73.9776, name: 'Hudson River, NY', state: 'NY' }\n};\n\n// Device persistence solutions\nconst DEVICE_PERSISTENCE_OPTIONS = [\n    {\n        name: 'Browser Fingerprinting',\n        description: 'Generate unique ID from device characteristics (screen, timezone, language, etc.)',\n        reliability: 'Medium - Can survive cache clearing but not incognito mode',\n        implementation: 'Use canvas fingerprinting, WebGL, audio context fingerprinting'\n    },\n    {\n        name: 'QR Code Account Recovery',\n        description: 'Generate QR code containing encrypted account data for backup',\n        reliability: 'High - User controls backup and can restore on any device',\n        implementation: 'Export account as QR code, user saves/screenshots, can scan to restore'\n    },\n    {\n        name: 'Email Backup Code',\n        description: 'Send backup code to email without requiring login',\n        reliability: 'High - Works across devices and survives cache clearing',\n        implementation: 'User provides email, receive code, enter code to restore account'\n    },\n    {\n        name: 'Local Network Storage',\n        description: 'Store backup on local network device or browser sync',\n        reliability: 'Medium - Works if user has consistent network/browser',\n        implementation: 'Use IndexedDB with browser sync or local network storage'\n    }\n];\n\n\n\n// Comprehensive US Cities Database (500+ major cities with focus on coastal/fishing areas)\nconst US_CITIES = [\n    // Northeast - Major Cities & Coastal Areas\n    { name: 'Boston', state: 'MA', lat: 42.3601, lng: -71.0589 },\n    { name: 'Cambridge', state: 'MA', lat: 42.3736, lng: -71.1097 },\n    { name: 'Worcester', state: 'MA', lat: 42.2626, lng: -71.8023 },\n    { name: 'Springfield', state: 'MA', lat: 42.1015, lng: -72.5898 },\n    { name: 'Lowell', state: 'MA', lat: 42.6334, lng: -71.3162 },\n    { name: 'Brockton', state: 'MA', lat: 42.0834, lng: -71.0184 },\n    { name: 'New Bedford', state: 'MA', lat: 41.6362, lng: -70.9342 },\n    { name: 'Quincy', state: 'MA', lat: 42.2529, lng: -71.0023 },\n    { name: 'Lynn', state: 'MA', lat: 42.4668, lng: -70.9495 },\n    { name: 'Fall River', state: 'MA', lat: 41.7015, lng: -71.1550 },\n    { name: 'Newton', state: 'MA', lat: 42.3370, lng: -71.2092 },\n    { name: 'Somerville', state: 'MA', lat: 42.3876, lng: -71.0995 },\n    { name: 'Lawrence', state: 'MA', lat: 42.7070, lng: -71.1631 },\n    { name: 'Framingham', state: 'MA', lat: 42.3793, lng: -71.4162 },\n    { name: 'Haverhill', state: 'MA', lat: 42.7762, lng: -71.0773 },\n    { name: 'Waltham', state: 'MA', lat: 42.3765, lng: -71.2356 },\n    { name: 'Malden', state: 'MA', lat: 42.4251, lng: -71.0662 },\n    { name: 'Brookline', state: 'MA', lat: 42.3317, lng: -71.1211 },\n    { name: 'Plymouth', state: 'MA', lat: 41.9584, lng: -70.6673 },\n    { name: 'Medford', state: 'MA', lat: 42.4184, lng: -71.1061 },\n    { name: 'Taunton', state: 'MA', lat: 41.9001, lng: -71.0897 },\n    { name: 'Chicopee', state: 'MA', lat: 42.1487, lng: -72.6078 },\n    { name: 'Weymouth', state: 'MA', lat: 42.2180, lng: -70.9395 },\n    { name: 'Revere', state: 'MA', lat: 42.4084, lng: -71.0120 },\n    { name: 'Peabody', state: 'MA', lat: 42.5279, lng: -70.9286 },\n    { name: 'Methuen', state: 'MA', lat: 42.7262, lng: -71.1909 },\n    { name: 'Barnstable', state: 'MA', lat: 41.7003, lng: -70.3002 },\n    { name: 'Pittsfield', state: 'MA', lat: 42.4501, lng: -73.2454 },\n    { name: 'Attleboro', state: 'MA', lat: 41.9443, lng: -71.2856 },\n    { name: 'Everett', state: 'MA', lat: 42.4084, lng: -71.0537 },\n    { name: 'Salem', state: 'MA', lat: 42.5195, lng: -70.8967 },\n    { name: 'Westfield', state: 'MA', lat: 42.1251, lng: -72.7495 },\n    { name: 'Leominster', state: 'MA', lat: 42.5251, lng: -71.7595 },\n    { name: 'Fitchburg', state: 'MA', lat: 42.5834, lng: -71.8023 },\n    { name: 'Beverly', state: 'MA', lat: 42.5584, lng: -70.8800 },\n    { name: 'Holyoke', state: 'MA', lat: 42.2043, lng: -72.6162 },\n    { name: 'Marlborough', state: 'MA', lat: 42.3459, lng: -71.5523 },\n    { name: 'Woburn', state: 'MA', lat: 42.4792, lng: -71.1523 },\n    { name: 'Chelsea', state: 'MA', lat: 42.3918, lng: -71.0328 },\n    { name: 'Gloucester', state: 'MA', lat: 42.6142, lng: -70.6631 },\n\n    // New York\n    { name: 'New York City', state: 'NY', lat: 40.7128, lng: -74.0060 },\n    { name: 'Buffalo', state: 'NY', lat: 42.8864, lng: -78.8784 },\n    { name: 'Rochester', state: 'NY', lat: 43.1566, lng: -77.6088 },\n    { name: 'Yonkers', state: 'NY', lat: 40.9312, lng: -73.8987 },\n    { name: 'Syracuse', state: 'NY', lat: 43.0481, lng: -76.1474 },\n    { name: 'Albany', state: 'NY', lat: 42.6526, lng: -73.7562 },\n    { name: 'New Rochelle', state: 'NY', lat: 40.9115, lng: -73.7823 },\n    { name: 'Mount Vernon', state: 'NY', lat: 40.9126, lng: -73.8370 },\n    { name: 'Schenectady', state: 'NY', lat: 42.8142, lng: -73.9396 },\n    { name: 'Utica', state: 'NY', lat: 43.1009, lng: -75.2327 },\n    { name: 'White Plains', state: 'NY', lat: 41.0340, lng: -73.7629 },\n    { name: 'Hempstead', state: 'NY', lat: 40.7062, lng: -73.6187 },\n    { name: 'Troy', state: 'NY', lat: 42.7284, lng: -73.6918 },\n    { name: 'Niagara Falls', state: 'NY', lat: 43.0962, lng: -79.0377 },\n    { name: 'Binghamton', state: 'NY', lat: 42.0987, lng: -75.9180 },\n    { name: 'Freeport', state: 'NY', lat: 40.6576, lng: -73.5832 },\n    { name: 'Valley Stream', state: 'NY', lat: 40.6642, lng: -73.7084 },\n    { name: 'Long Beach', state: 'NY', lat: 40.5885, lng: -73.6579 },\n    { name: 'Watertown', state: 'NY', lat: 43.9747, lng: -75.9107 },\n    { name: 'Jamestown', state: 'NY', lat: 42.0970, lng: -79.2353 },\n    { name: 'New York', state: 'NY', lat: 40.7128, lng: -74.0060 },\n    { name: 'Bronx', state: 'NY', lat: 40.8448, lng: -73.8648 },\n    { name: 'Brooklyn', state: 'NY', lat: 40.6782, lng: -73.9442 },\n    { name: 'Queens', state: 'NY', lat: 40.7282, lng: -73.7949 },\n    { name: 'Staten Island', state: 'NY', lat: 40.5795, lng: -74.1502 },\n    { name: 'Manhattan', state: 'NY', lat: 40.7831, lng: -73.9712 },\n    { name: 'Elmira', state: 'NY', lat: 42.0898, lng: -76.8077 },\n    { name: 'Tonawanda', state: 'NY', lat: 43.0126, lng: -78.8803 },\n    { name: 'Poughkeepsie', state: 'NY', lat: 41.7004, lng: -73.9209 },\n    { name: 'Newburgh', state: 'NY', lat: 41.5034, lng: -74.0104 },\n    { name: 'Middletown', state: 'NY', lat: 41.4459, lng: -74.4226 },\n\n    // Connecticut  \n    { name: 'Bridgeport', state: 'CT', lat: 41.1865, lng: -73.1952 },\n    { name: 'New Haven', state: 'CT', lat: 41.3083, lng: -72.9279 },\n    { name: 'Hartford', state: 'CT', lat: 41.7658, lng: -72.6734 },\n    { name: 'Stamford', state: 'CT', lat: 41.0534, lng: -73.5387 },\n    { name: 'Waterbury', state: 'CT', lat: 41.5581, lng: -73.0515 },\n    { name: 'Norwalk', state: 'CT', lat: 41.1175, lng: -73.4079 },\n    { name: 'Danbury', state: 'CT', lat: 41.3948, lng: -73.4540 },\n    { name: 'New Britain', state: 'CT', lat: 41.6612, lng: -72.7795 },\n    { name: 'West Haven', state: 'CT', lat: 41.2707, lng: -72.9470 },\n    { name: 'Greenwich', state: 'CT', lat: 41.0262, lng: -73.6284 },\n    { name: 'Hamden', state: 'CT', lat: 41.3959, lng: -72.9248 },\n    { name: 'Meriden', state: 'CT', lat: 41.5382, lng: -72.8070 },\n    { name: 'Bristol', state: 'CT', lat: 41.6712, lng: -72.9493 },\n    { name: 'West Hartford', state: 'CT', lat: 41.7620, lng: -72.7420 },\n    { name: 'Milford', state: 'CT', lat: 41.2223, lng: -73.0565 },\n    { name: 'Middletown', state: 'CT', lat: 41.5623, lng: -72.6506 },\n    { name: 'Norwich', state: 'CT', lat: 41.5242, lng: -72.0759 },\n    { name: 'New London', state: 'CT', lat: 41.3556, lng: -72.0995 },\n    { name: 'Torrington', state: 'CT', lat: 41.8007, lng: -73.1212 },\n    { name: 'Fairfield', state: 'CT', lat: 41.1612, lng: -73.2615 },\n\n    // Rhode Island\n    { name: 'Providence', state: 'RI', lat: 41.8240, lng: -71.4128 },\n    { name: 'Cranston', state: 'RI', lat: 41.7798, lng: -71.4371 },\n    { name: 'Warwick', state: 'RI', lat: 41.7001, lng: -71.4162 },\n    { name: 'Pawtucket', state: 'RI', lat: 41.8787, lng: -71.3826 },\n    { name: 'East Providence', state: 'RI', lat: 41.8137, lng: -71.3701 },\n    { name: 'Woonsocket', state: 'RI', lat: 42.0029, lng: -71.5147 },\n    { name: 'Newport', state: 'RI', lat: 41.4901, lng: -71.3128 },\n    { name: 'Central Falls', state: 'RI', lat: 41.8904, lng: -71.3926 },\n    { name: 'Westerly', state: 'RI', lat: 41.3776, lng: -71.8270 },\n    { name: 'Cumberland', state: 'RI', lat: 41.9665, lng: -71.4326 },\n\n    // Maine\n    { name: 'Portland', state: 'ME', lat: 43.6591, lng: -70.2568 },\n    { name: 'Lewiston', state: 'ME', lat: 44.1004, lng: -70.2148 },\n    { name: 'Bangor', state: 'ME', lat: 44.8016, lng: -68.7712 },\n    { name: 'South Portland', state: 'ME', lat: 43.6415, lng: -70.2409 },\n    { name: 'Auburn', state: 'ME', lat: 44.0979, lng: -70.2311 },\n    { name: 'Biddeford', state: 'ME', lat: 43.4926, lng: -70.4533 },\n    { name: 'Sanford', state: 'ME', lat: 43.4390, lng: -70.7740 },\n    { name: 'Saco', state: 'ME', lat: 43.5009, lng: -70.4428 },\n    { name: 'Augusta', state: 'ME', lat: 44.3106, lng: -69.7795 },\n    { name: 'Westbrook', state: 'ME', lat: 43.6770, lng: -70.3712 },\n    { name: 'Waterville', state: 'ME', lat: 44.5323, lng: -69.6317 },\n    { name: 'Presque Isle', state: 'ME', lat: 46.6811, lng: -68.0161 },\n    { name: 'Bar Harbor', state: 'ME', lat: 44.3876, lng: -68.2039 },\n    { name: 'Calais', state: 'ME', lat: 45.1737, lng: -67.2741 },\n    { name: 'Ellsworth', state: 'ME', lat: 44.5434, lng: -68.4198 },\n\n    // New Hampshire\n    { name: 'Manchester', state: 'NH', lat: 42.9956, lng: -71.4548 },\n    { name: 'Nashua', state: 'NH', lat: 42.7654, lng: -71.4676 },\n    { name: 'Concord', state: 'NH', lat: 43.2081, lng: -71.5376 },\n    { name: 'Derry', state: 'NH', lat: 42.8804, lng: -71.3273 },\n    { name: 'Dover', state: 'NH', lat: 43.1979, lng: -70.8737 },\n    { name: 'Rochester', state: 'NH', lat: 43.3042, lng: -70.9759 },\n    { name: 'Salem', state: 'NH', lat: 42.7876, lng: -71.2009 },\n    { name: 'Merrimack', state: 'NH', lat: 42.8659, lng: -71.4995 },\n    { name: 'Hudson', state: 'NH', lat: 42.7659, lng: -71.4342 },\n    { name: 'Londonderry', state: 'NH', lat: 42.8653, lng: -71.3739 },\n    { name: 'Keene', state: 'NH', lat: 42.9342, lng: -72.2815 },\n    { name: 'Portsmouth', state: 'NH', lat: 43.0718, lng: -70.7626 },\n    { name: 'Laconia', state: 'NH', lat: 43.5276, lng: -71.4703 },\n    { name: 'Hampton', state: 'NH', lat: 42.9373, lng: -70.8187 },\n\n    // Vermont\n    { name: 'Burlington', state: 'VT', lat: 44.4759, lng: -73.2121 },\n    { name: 'Essex', state: 'VT', lat: 44.4906, lng: -73.1129 },\n    { name: 'South Burlington', state: 'VT', lat: 44.4669, lng: -73.1709 },\n    { name: 'Colchester', state: 'VT', lat: 44.5434, lng: -73.1317 },\n    { name: 'Rutland', state: 'VT', lat: 43.6106, lng: -72.9726 },\n    { name: 'Bennington', state: 'VT', lat: 42.8781, lng: -73.1968 },\n    { name: 'Brattleboro', state: 'VT', lat: 42.8509, lng: -72.5579 },\n    { name: 'Milton', state: 'VT', lat: 44.6365, lng: -73.1151 },\n    { name: 'Hartford', state: 'VT', lat: 43.6506, lng: -72.3190 },\n    { name: 'Williston', state: 'VT', lat: 44.4434, lng: -73.0934 },\n    { name: 'Middlebury', state: 'VT', lat: 44.0154, lng: -73.1673 },\n    { name: 'Montpelier', state: 'VT', lat: 44.2601, lng: -72.5806 },\n\n    // Mid-Atlantic\n    { name: 'Philadelphia', state: 'PA', lat: 39.9526, lng: -75.1652 },\n    { name: 'Pittsburgh', state: 'PA', lat: 40.4406, lng: -79.9959 },\n    { name: 'Allentown', state: 'PA', lat: 40.6084, lng: -75.4901 },\n    { name: 'Erie', state: 'PA', lat: 42.1292, lng: -80.0851 },\n    { name: 'Reading', state: 'PA', lat: 40.3356, lng: -75.9269 },\n    { name: 'Scranton', state: 'PA', lat: 41.4090, lng: -75.6624 },\n    { name: 'Bethlehem', state: 'PA', lat: 40.6259, lng: -75.3704 },\n    { name: 'Lancaster', state: 'PA', lat: 40.0379, lng: -76.3055 },\n    { name: 'Harrisburg', state: 'PA', lat: 40.2732, lng: -76.8839 },\n    { name: 'York', state: 'PA', lat: 39.9626, lng: -76.7277 },\n    { name: 'Altoona', state: 'PA', lat: 40.5187, lng: -78.3947 },\n    { name: 'Wilkes-Barre', state: 'PA', lat: 41.2459, lng: -75.8813 },\n\n    { name: 'Newark', state: 'NJ', lat: 40.7357, lng: -74.1724 },\n    { name: 'Jersey City', state: 'NJ', lat: 40.7178, lng: -74.0431 },\n    { name: 'Paterson', state: 'NJ', lat: 40.9168, lng: -74.1718 },\n    { name: 'Elizabeth', state: 'NJ', lat: 40.6640, lng: -74.2107 },\n    { name: 'Edison', state: 'NJ', lat: 40.5187, lng: -74.4121 },\n    { name: 'Woodbridge', state: 'NJ', lat: 40.5576, lng: -74.2846 },\n    { name: 'Lakewood', state: 'NJ', lat: 40.0979, lng: -74.2179 },\n    { name: 'Toms River', state: 'NJ', lat: 39.9537, lng: -74.1979 },\n    { name: 'Hamilton', state: 'NJ', lat: 40.2290, lng: -74.6598 },\n    { name: 'Trenton', state: 'NJ', lat: 40.2206, lng: -74.7565 },\n    { name: 'Camden', state: 'NJ', lat: 39.9259, lng: -75.1196 },\n    { name: 'Clifton', state: 'NJ', lat: 40.8584, lng: -74.1638 },\n    { name: 'Brick', state: 'NJ', lat: 40.0473, lng: -74.1354 },\n    { name: 'Cherry Hill', state: 'NJ', lat: 39.9348, lng: -75.0307 },\n    { name: 'Passaic', state: 'NJ', lat: 40.8568, lng: -74.1279 },\n    { name: 'Union City', state: 'NJ', lat: 40.7662, lng: -74.0243 },\n    { name: 'Bayonne', state: 'NJ', lat: 40.6687, lng: -74.1143 },\n    { name: 'East Orange', state: 'NJ', lat: 40.7668, lng: -74.2049 },\n    { name: 'Vineland', state: 'NJ', lat: 39.4864, lng: -75.0260 },\n    { name: 'New Brunswick', state: 'NJ', lat: 40.4862, lng: -74.4518 },\n    { name: 'Hoboken', state: 'NJ', lat: 40.7439, lng: -74.0324 },\n    { name: 'Plainfield', state: 'NJ', lat: 40.6337, lng: -74.4071 },\n    { name: 'West New York', state: 'NJ', lat: 40.7878, lng: -74.0143 },\n    { name: 'Hackensack', state: 'NJ', lat: 40.8859, lng: -74.0437 },\n    { name: 'Sayreville', state: 'NJ', lat: 40.4595, lng: -74.3612 },\n    { name: 'Kearny', state: 'NJ', lat: 40.7684, lng: -74.1454 },\n    { name: 'Linden', state: 'NJ', lat: 40.6220, lng: -74.2446 },\n    { name: 'Atlantic City', state: 'NJ', lat: 39.3643, lng: -74.4229 },\n\n    { name: 'Baltimore', state: 'MD', lat: 39.2904, lng: -76.6122 },\n    { name: 'Columbia', state: 'MD', lat: 39.2037, lng: -76.8610 },\n    { name: 'Germantown', state: 'MD', lat: 39.1731, lng: -77.2717 },\n    { name: 'Silver Spring', state: 'MD', lat: 38.9912, lng: -77.0261 },\n    { name: 'Waldorf', state: 'MD', lat: 38.6206, lng: -76.9391 },\n    { name: 'Glen Burnie', state: 'MD', lat: 39.1626, lng: -76.6247 },\n    { name: 'Ellicott City', state: 'MD', lat: 39.2673, lng: -76.7983 },\n    { name: 'Frederick', state: 'MD', lat: 39.4143, lng: -77.4105 },\n    { name: 'Dundalk', state: 'MD', lat: 39.2709, lng: -76.5219 },\n    { name: 'Rockville', state: 'MD', lat: 39.0840, lng: -77.1528 },\n    { name: 'Bethesda', state: 'MD', lat: 38.9807, lng: -77.1020 },\n    { name: 'Gaithersburg', state: 'MD', lat: 39.1434, lng: -77.2014 },\n    { name: 'Annapolis', state: 'MD', lat: 38.9717, lng: -76.5010 },\n    { name: 'Bowie', state: 'MD', lat: 38.9426, lng: -76.7302 },\n    { name: 'Hagerstown', state: 'MD', lat: 39.6418, lng: -77.7200 },\n    { name: 'Cumberland', state: 'MD', lat: 39.6526, lng: -78.7625 },\n    { name: 'Salisbury', state: 'MD', lat: 38.3607, lng: -75.5994 },\n    { name: 'Ocean City', state: 'MD', lat: 38.3365, lng: -75.0849 },\n\n    { name: 'Washington', state: 'DC', lat: 38.9072, lng: -77.0369 },\n\n    { name: 'Wilmington', state: 'DE', lat: 39.7391, lng: -75.5398 },\n    { name: 'Dover', state: 'DE', lat: 39.1612, lng: -75.5264 },\n    { name: 'Newark', state: 'DE', lat: 39.6837, lng: -75.7497 },\n    { name: 'Middletown', state: 'DE', lat: 39.4495, lng: -75.7163 },\n    { name: 'Smyrna', state: 'DE', lat: 39.2998, lng: -75.6046 },\n    { name: 'Milford', state: 'DE', lat: 38.9129, lng: -75.4277 },\n    { name: 'Seaford', state: 'DE', lat: 38.6412, lng: -75.6110 },\n    { name: 'Georgetown', state: 'DE', lat: 38.6901, lng: -75.3855 },\n    { name: 'Elsmere', state: 'DE', lat: 39.7379, lng: -75.5924 },\n    { name: 'New Castle', state: 'DE', lat: 39.6620, lng: -75.5664 },\n\n    // Additional Popular US Cities for broader coverage\n    { name: 'Chicago', state: 'IL', lat: 41.8781, lng: -87.6298 },\n    { name: 'Los Angeles', state: 'CA', lat: 34.0522, lng: -118.2437 },\n    { name: 'Houston', state: 'TX', lat: 29.7604, lng: -95.3698 },\n    { name: 'Phoenix', state: 'AZ', lat: 33.4484, lng: -112.0740 },\n    { name: 'San Antonio', state: 'TX', lat: 29.4241, lng: -98.4936 },\n    { name: 'San Diego', state: 'CA', lat: 32.7157, lng: -117.1611 },\n    { name: 'Dallas', state: 'TX', lat: 32.7767, lng: -96.7970 },\n    { name: 'San Jose', state: 'CA', lat: 37.3382, lng: -121.8863 },\n    { name: 'Austin', state: 'TX', lat: 30.2672, lng: -97.7431 },\n    { name: 'Jacksonville', state: 'FL', lat: 30.3322, lng: -81.6557 },\n    { name: 'Fort Worth', state: 'TX', lat: 32.7555, lng: -97.3308 },\n    { name: 'Columbus', state: 'OH', lat: 39.9612, lng: -82.9988 },\n    { name: 'San Francisco', state: 'CA', lat: 37.7749, lng: -122.4194 },\n    { name: 'Charlotte', state: 'NC', lat: 35.2271, lng: -80.8431 },\n    { name: 'Indianapolis', state: 'IN', lat: 39.7684, lng: -86.1581 },\n    { name: 'Seattle', state: 'WA', lat: 47.6062, lng: -122.3321 },\n    { name: 'Denver', state: 'CO', lat: 39.7392, lng: -104.9903 },\n    { name: 'Detroit', state: 'MI', lat: 42.3314, lng: -83.0458 },\n    { name: 'Nashville', state: 'TN', lat: 36.1627, lng: -86.7816 },\n    { name: 'Memphis', state: 'TN', lat: 35.1495, lng: -90.0490 },\n    { name: 'Portland', state: 'OR', lat: 45.5152, lng: -122.6784 },\n    { name: 'Oklahoma City', state: 'OK', lat: 35.4676, lng: -97.5164 },\n    { name: 'Las Vegas', state: 'NV', lat: 36.1699, lng: -115.1398 },\n    { name: 'Louisville', state: 'KY', lat: 38.2527, lng: -85.7585 },\n    { name: 'Milwaukee', state: 'WI', lat: 43.0389, lng: -87.9065 },\n    { name: 'Albuquerque', state: 'NM', lat: 35.0844, lng: -106.6504 },\n    { name: 'Tucson', state: 'AZ', lat: 32.2226, lng: -110.9747 },\n    { name: 'Fresno', state: 'CA', lat: 36.7378, lng: -119.7871 },\n    { name: 'Sacramento', state: 'CA', lat: 38.5816, lng: -121.4944 },\n    { name: 'Kansas City', state: 'MO', lat: 39.0997, lng: -94.5786 },\n    { name: 'Mesa', state: 'AZ', lat: 33.4152, lng: -111.8315 },\n    { name: 'Virginia Beach', state: 'VA', lat: 36.8529, lng: -75.9780 },\n    { name: 'Atlanta', state: 'GA', lat: 33.7490, lng: -84.3880 },\n    { name: 'Colorado Springs', state: 'CO', lat: 38.8339, lng: -104.8214 },\n    { name: 'Omaha', state: 'NE', lat: 41.2565, lng: -95.9345 },\n    { name: 'Raleigh', state: 'NC', lat: 35.7796, lng: -78.6382 },\n    { name: 'Miami', state: 'FL', lat: 25.7617, lng: -80.1918 },\n    { name: 'Long Beach', state: 'CA', lat: 33.7701, lng: -118.1937 },\n    { name: 'Virginia Beach', state: 'VA', lat: 36.8529, lng: -75.9780 },\n    { name: 'Oakland', state: 'CA', lat: 37.8044, lng: -122.2712 },\n    { name: 'Minneapolis', state: 'MN', lat: 44.9778, lng: -93.2650 },\n    { name: 'Tulsa', state: 'OK', lat: 36.1540, lng: -95.9928 },\n    { name: 'Arlington', state: 'TX', lat: 32.7357, lng: -97.1081 },\n    { name: 'Tampa', state: 'FL', lat: 27.9506, lng: -82.4572 },\n    { name: 'New Orleans', state: 'LA', lat: 29.9511, lng: -90.0715 },\n    { name: 'Wichita', state: 'KS', lat: 37.6872, lng: -97.3301 },\n    { name: 'Cleveland', state: 'OH', lat: 41.4993, lng: -81.6944 },\n    { name: 'Bakersfield', state: 'CA', lat: 35.3733, lng: -119.0187 },\n    { name: 'Aurora', state: 'CO', lat: 39.7294, lng: -104.8319 },\n    { name: 'Anaheim', state: 'CA', lat: 33.8366, lng: -117.9143 },\n    { name: 'Honolulu', state: 'HI', lat: 21.3099, lng: -157.8581 },\n    { name: 'Santa Ana', state: 'CA', lat: 33.7455, lng: -117.8677 },\n    { name: 'Corpus Christi', state: 'TX', lat: 27.8006, lng: -97.3964 },\n    { name: 'Riverside', state: 'CA', lat: 33.9533, lng: -117.3962 },\n    { name: 'Lexington', state: 'KY', lat: 38.0406, lng: -84.5037 },\n    { name: 'Stockton', state: 'CA', lat: 37.9577, lng: -121.2908 },\n    { name: 'St. Paul', state: 'MN', lat: 44.9537, lng: -93.0900 },\n    { name: 'St. Louis', state: 'MO', lat: 38.6270, lng: -90.1994 },\n    { name: 'Pittsburgh', state: 'PA', lat: 40.4406, lng: -79.9959 },\n    { name: 'Anchorage', state: 'AK', lat: 61.2181, lng: -149.9003 },\n    { name: 'Cincinnati', state: 'OH', lat: 39.1031, lng: -84.5120 },\n    { name: 'Henderson', state: 'NV', lat: 36.0395, lng: -114.9817 },\n    { name: 'Greensboro', state: 'NC', lat: 36.0726, lng: -79.7920 },\n    { name: 'Plano', state: 'TX', lat: 33.0198, lng: -96.6989 },\n    { name: 'Newark', state: 'NJ', lat: 40.7357, lng: -74.1724 },\n    { name: 'Lincoln', state: 'NE', lat: 40.8136, lng: -96.7026 },\n    { name: 'Toledo', state: 'OH', lat: 41.6528, lng: -83.5379 },\n    { name: 'Orlando', state: 'FL', lat: 28.5383, lng: -81.3792 },\n    { name: 'Chula Vista', state: 'CA', lat: 32.6401, lng: -117.0842 },\n    { name: 'Jersey City', state: 'NJ', lat: 40.7178, lng: -74.0431 },\n    { name: 'Chandler', state: 'AZ', lat: 33.3062, lng: -111.8413 },\n    { name: 'Laredo', state: 'TX', lat: 27.5306, lng: -99.4803 },\n    { name: 'Madison', state: 'WI', lat: 43.0731, lng: -89.4012 },\n    { name: 'Lubbock', state: 'TX', lat: 33.5779, lng: -101.8552 },\n    { name: 'Winston-Salem', state: 'NC', lat: 36.0999, lng: -80.2442 },\n    { name: 'Garland', state: 'TX', lat: 32.9126, lng: -96.6389 },\n    { name: 'Glendale', state: 'AZ', lat: 33.5387, lng: -112.1860 },\n    { name: 'Hialeah', state: 'FL', lat: 25.8576, lng: -80.2781 },\n    { name: 'Reno', state: 'NV', lat: 39.5296, lng: -119.8138 },\n    { name: 'Baton Rouge', state: 'LA', lat: 30.4515, lng: -91.1871 },\n    { name: 'Irvine', state: 'CA', lat: 33.6846, lng: -117.8265 },\n    { name: 'Chesapeake', state: 'VA', lat: 36.7682, lng: -76.2875 },\n    { name: 'Irving', state: 'TX', lat: 32.8140, lng: -96.9489 },\n    { name: 'Scottsdale', state: 'AZ', lat: 33.4942, lng: -111.9261 },\n    { name: 'North Las Vegas', state: 'NV', lat: 36.1989, lng: -115.1175 },\n    { name: 'Fremont', state: 'CA', lat: 37.5485, lng: -121.9886 },\n    { name: 'Gilbert', state: 'AZ', lat: 33.3528, lng: -111.7890 },\n    { name: 'San Bernardino', state: 'CA', lat: 34.1083, lng: -117.2898 },\n    { name: 'Boise', state: 'ID', lat: 43.6150, lng: -116.2023 },\n    { name: 'Birmingham', state: 'AL', lat: 33.5207, lng: -86.8025 }\n];\n\n// Enhanced search function with better filtering\nconst searchCities = (query) => {\n    if (!query || query.length < 1) return [];\n    \n    const lowercaseQuery = query.toLowerCase().trim();\n    \n    // Score-based ranking for better results\n    const cityMatches = US_CITIES.map(city => {\n        const cityName = city.name.toLowerCase();\n        const stateName = city.state.toLowerCase();\n        const fullName = `${city.name}, ${city.state}`.toLowerCase();\n        \n        let score = 0;\n        \n        // Exact matches get highest priority\n        if (cityName === lowercaseQuery) score += 100;\n        if (fullName === lowercaseQuery) score += 95;\n        \n        // Starts with query gets high priority  \n        if (cityName.startsWith(lowercaseQuery)) score += 50;\n        if (stateName.startsWith(lowercaseQuery)) score += 30;\n        \n        // Contains query gets medium priority\n        if (cityName.includes(lowercaseQuery)) score += 20;\n        if (stateName.includes(lowercaseQuery)) score += 10;\n        if (fullName.includes(lowercaseQuery)) score += 15;\n        \n        return { ...city, score };\n    })\n    .filter(city => city.score > 0)\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 15); // Show more results for better UX\n    \n    return cityMatches;\n};\n\n// Fallback geocoding using Nominatim API (free, no API key required)\nconst geocodeWithAPI = async (query) => {\n    try {\n        const response = await fetch(\n            `https://nominatim.openstreetmap.org/search?format=json&countrycodes=us&limit=5&q=${encodeURIComponent(query)}`\n        );\n        const data = await response.json();\n        \n        if (data && data.length > 0) {\n            return data.map(item => ({\n                name: item.display_name.split(',')[0],\n                state: item.display_name.split(',')[1]?.trim() || 'Unknown',\n                lat: parseFloat(item.lat),\n                lng: parseFloat(item.lon)\n            }));\n        }\n    } catch (error) {\n        console.error('Geocoding API error:', error);\n    }\n    return [];\n};\n\n// Device ID for anonymous voting (stored locally)\nconst getDeviceId = () => {\n    let deviceId = localStorage.getItem('riprap_device_id');\n    if (!deviceId) {\n        deviceId = crypto.randomUUID();\n        localStorage.setItem('riprap_device_id', deviceId);\n    }\n    return deviceId;\n};\n\n// Database operations now handled by localStorage data service\n\n// Generate unique screen name\nconst generateScreenName = () => {\n    const adjectives = ['REEL', 'BIG', 'DEEP', 'LUCKY', 'MASTER', 'PRO', 'BASS', 'CATCH', 'FISHER', 'ANGLER'];\n    const nouns = ['FISHER', 'CASTER', 'HUNTER', 'MASTER', 'CAPTAIN', 'ADMIRAL', 'SAILOR', 'KEEPER', 'LEGEND', 'HERO'];\n    const numbers = Math.floor(Math.random() * 999) + 1;\n    \n    const adj = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\n    \n    return `${adj}${noun}${numbers}`;\n};\n\n// Available colors for usernames (accessibility compliant)\nconst USERNAME_COLORS = [\n    { name: 'Navy', value: '#1e3a8a', textClass: 'text-blue-800' },\n    { name: 'Purple', value: '#7c3aed', textClass: 'text-purple-600' },\n    { name: 'Green', value: '#059669', textClass: 'text-emerald-600' },\n    { name: 'Orange', value: '#ea580c', textClass: 'text-orange-600' },\n    { name: 'Red', value: '#dc2626', textClass: 'text-red-600' },\n    { name: 'Teal', value: '#0d9488', textClass: 'text-teal-600' },\n    { name: 'Pink', value: '#db2777', textClass: 'text-pink-600' },\n    { name: 'Indigo', value: '#4338ca', textClass: 'text-indigo-600' }\n];\n\n// Get or create user identity\nconst getUserIdentity = (customUsername = null, selectedColor = null) => {\n    let user = localStorage.getItem('riprap_user');\n    if (!user || customUsername) {\n        const defaultColor = USERNAME_COLORS[0]; // Navy as default\n        user = {\n            id: crypto.randomUUID(),\n            screenName: customUsername || generateScreenName(),\n            color: selectedColor || defaultColor,\n            hasChangedName: !!customUsername,\n            createdAt: new Date().toISOString()\n        };\n        localStorage.setItem('riprap_user', JSON.stringify(user));\n    } else {\n        user = JSON.parse(user);\n        // Ensure color exists for existing users\n        if (!user.color) {\n            user.color = USERNAME_COLORS[0];\n            localStorage.setItem('riprap_user', JSON.stringify(user));\n        }\n    }\n    return user;\n};\n\n// Location settings persistence\nconst saveLocationSettings = (location, radius) => {\n    const settings = {\n        customLocation: location,\n        locationRadius: radius,\n        savedAt: new Date().toISOString()\n    };\n    localStorage.setItem('riprap_location_settings', JSON.stringify(settings));\n};\n\nconst loadLocationSettings = () => {\n    const settings = localStorage.getItem('riprap_location_settings');\n    if (settings) {\n        return JSON.parse(settings);\n    }\n    return { customLocation: null, locationRadius: 10 }; // Default values\n};\n\n// Calculate distance between two coordinates (Haversine formula)\nconst calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 3959; // Earth's radius in miles\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n        Math.sin(dLat/2) * Math.sin(dLat/2) +\n        Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n        Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n};\n\n// Rate limiting configuration\nconst RATE_LIMITS = {\n    POST_COOLDOWN: 30000, // 30 seconds between posts\n    VOTE_COOLDOWN: 1000,  // 1 second between votes\n    MAX_POSTS_PER_HOUR: 10,\n    MAX_VOTES_PER_MINUTE: 30\n};\n\n// Rate limiting check\nconst checkRateLimit = (lastTime, cooldown, count, maxCount, timeWindow) => {\n    const now = Date.now();\n    const timeSinceLastAction = now - lastTime;\n    \n    if (timeSinceLastAction < cooldown) {\n        return { allowed: false, remainingTime: Math.ceil((cooldown - timeSinceLastAction) / 1000) };\n    }\n    \n    // Check count-based limits (simplified - in real app would track per time window)\n    if (count >= maxCount) {\n        return { allowed: false, remainingTime: Math.ceil(timeWindow / 1000) };\n    }\n    \n    return { allowed: true, remainingTime: 0 };\n};\n\n// Auto-moderation - spam and inappropriate content filter\nconst BLOCKED_WORDS = [\n    'spam', 'scam', 'fake', 'bot', 'hack', 'cheat', 'exploit',\n    'idiot', 'stupid', 'hate', 'kill', 'die', 'suicide',\n    'buy now', 'click here', 'make money', 'get rich', 'free money'\n];\n\nconst SUSPICIOUS_PATTERNS = [\n    /(.)\\1{4,}/g, // Repeated characters (aaaaa)\n    /[A-Z]{10,}/g, // Excessive caps\n    /https?:\\/\\/[^\\s]+/g, // URLs (could be spam)\n    /\\d{10,}/g, // Long numbers (phone numbers)\n    /[!@#$%^&*]{3,}/g // Excessive special characters\n];\n\nconst moderateContent = (content) => {\n    const lowerContent = content.toLowerCase();\n    const issues = [];\n    \n    // Check for blocked words\n    const foundBlockedWords = BLOCKED_WORDS.filter(word => lowerContent.includes(word));\n    if (foundBlockedWords.length > 0) {\n        issues.push(`Contains inappropriate words: ${foundBlockedWords.join(', ')}`);\n    }\n    \n    // Check for suspicious patterns\n    SUSPICIOUS_PATTERNS.forEach(pattern => {\n        if (pattern.test(content)) {\n            issues.push('Contains suspicious patterns');\n        }\n    });\n    \n    // Check length\n    if (content.length < 3) {\n        issues.push('Content too short');\n    }\n    \n    // Check for excessive repetition\n    const words = content.split(/\\s+/);\n    const wordCounts = {};\n    words.forEach(word => {\n        const cleanWord = word.toLowerCase().replace(/[^a-z]/g, '');\n        if (cleanWord.length > 2) {\n            wordCounts[cleanWord] = (wordCounts[cleanWord] || 0) + 1;\n        }\n    });\n    \n    const maxRepeats = Math.max(...Object.values(wordCounts));\n    if (maxRepeats > 3) {\n        issues.push('Excessive word repetition detected');\n    }\n    \n    return {\n        allowed: issues.length === 0,\n        issues: issues,\n        severity: issues.length > 2 ? 'high' : issues.length > 0 ? 'medium' : 'low'\n    };\n};\n\n\n\n\n\n// Get approximate location name from coordinates\nconst getApproximateLocation = (lat, lng) => {\n    // Find the closest major city for general area identification\n    let closestLocation = null;\n    let closestDistance = Infinity;\n    \n    Object.entries(STRIPED_BASS_LOCATIONS).forEach(([key, location]) => {\n        const distance = calculateDistance(lat, lng, location.lat, location.lng);\n        if (distance < closestDistance) {\n            closestDistance = distance;\n            closestLocation = location;\n        }\n    });\n    \n    if (!closestLocation) return 'Unknown Area';\n    \n    // If very close to a major city (within 25 miles), use the city name\n    if (closestDistance <= 25) {\n        return closestLocation.name;\n    } else {\n        return `${Math.round(closestDistance)} miles from ${closestLocation.name}`;\n    }\n};\n\n// Get nearest city/state for post display (more precise than approximate location)\nconst getNearestCityState = (lat, lng) => {\n    // First try to find in US_CITIES database\n    let closestCity = null;\n    let closestDistance = Infinity;\n    \n    US_CITIES.forEach(city => {\n        const distance = calculateDistance(lat, lng, city.lat, city.lng);\n        if (distance < closestDistance) {\n            closestDistance = distance;\n            closestCity = city;\n        }\n    });\n    \n    if (closestCity && closestDistance <= 50) { // Within 50 miles\n        return `${closestCity.name}, ${closestCity.state}`;\n    }\n    \n    // Fallback to fishing locations\n    let closestLocation = null;\n    closestDistance = Infinity;\n    \n    Object.entries(STRIPED_BASS_LOCATIONS).forEach(([key, location]) => {\n        const distance = calculateDistance(lat, lng, location.lat, location.lng);\n        if (distance < closestDistance) {\n            closestDistance = distance;\n            closestLocation = location;\n        }\n    });\n    \n    if (closestLocation) {\n        return closestLocation.name;\n    }\n    \n    return 'Unknown Location';\n};\n\n// ASCII Art for fishing\nconst FISHING_ASCII = `\n    o                 o\n     \\\\               /\n      \\\\             /\n  ~~~~~~\\\\~~~~~~~~~~~/~~~~~~\n         \\\\         /\n          \\\\       /\n           \\\\     /\n            \\\\   /\n             \\\\_/\n              |\n         ____/ \\\\____\n        /           \\\\\n       |   RIPRAP   |\n        \\\\___________/\n`;\n\n// Username Setup Component\nconst UsernameSetup = ({ onUsernameSet }) => {\n    const [username, setUsername] = useState(generateScreenName());\n    const [selectedColor, setSelectedColor] = useState(USERNAME_COLORS[0]);\n\n    const handleContinue = () => {\n        if (username.trim().length < 3) {\n            alert('Username must be at least 3 characters');\n            return;\n        }\n        if (username.trim().length > 20) {\n            alert('Username must be 20 characters or less');\n            return;\n        }\n        onUsernameSet(username.trim().toUpperCase(), selectedColor);\n    };\n\n    const generateNew = () => {\n        setUsername(generateScreenName());\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4 terminal-text\">\n            <div className=\"w-full max-w-md mx-auto terminal-card p-6\">\n                <div className=\"text-center space-y-4\">\n                    <div className=\"ascii-art text-xs terminal-accent\">{FISHING_ASCII}</div>\n                    <div className=\"text-xl font-bold terminal-text\">\n                        Welcome to RipRap\n                    </div>\n                    <div className=\"text-sm terminal-text\">\n                        Choose your angler name to get started\n                    </div>\n                </div>\n                \n                <div className=\"space-y-4 mt-6\">\n                    <div className=\"space-y-2\">\n                        <label className=\"text-sm font-bold terminal-text block\">\n                            Your angler name:\n                        </label>\n                        <input\n                            type=\"text\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value.toUpperCase())}\n                            placeholder=\"Enter username\"\n                            className=\"w-full h-10 px-3 py-2 terminal-input text-sm font-mono focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                            maxLength={20}\n                        />\n                        <div className=\"text-xs terminal-accent\">\n                            {username.length}/20 characters\n                        </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                        <label className=\"text-sm font-bold terminal-text block\">\n                            Choose your color:\n                        </label>\n                        <div className=\"grid grid-cols-4 gap-2\">\n                            {USERNAME_COLORS.map((color) => (\n                                <button\n                                    key={color.name}\n                                    onClick={() => setSelectedColor(color)}\n                                    className={`h-10 rounded border-2 ${\n                                        selectedColor.name === color.name \n                                            ? 'border-navy-700 ring-2 ring-navy-300' \n                                            : 'border-gray-300 hover:border-gray-400'\n                                    } focus:outline-none focus:ring-2 focus:ring-navy-700`}\n                                    style={{ backgroundColor: color.value }}\n                                    title={color.name}\n                                />\n                            ))}\n                        </div>\n                        <div className=\"text-xs terminal-accent\">\n                            Preview: <span className={selectedColor.textClass} style={{ fontWeight: 'bold' }}>{username}</span>\n                        </div>\n                    </div>\n\n                    <div className=\"bg-yellow-50 border border-yellow-200 p-3 text-xs terminal-text\">\n                        ⚠️ <strong>Note:</strong> You cannot change your username or color after creating your account. Choose carefully!\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-2\">\n                        <button \n                            onClick={generateNew}\n                            className=\"h-10 px-3 py-2 terminal-button text-sm font-bold hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                        >\n                            Generate New\n                        </button>\n                        <button \n                            onClick={handleContinue}\n                            disabled={!username.trim() || username.trim().length < 3}\n                            className=\"h-10 px-3 py-2 terminal-button text-sm font-bold hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-700 disabled:terminal-button:disabled\"\n                        >\n                            Start Fishing\n                        </button>\n                    </div>\n\n                    <div className=\"text-center text-xs terminal-text mt-4 space-y-1\">\n                        <div>• Anonymous fishing community</div>\n                        <div>• Location-based posts</div>\n                        <div>• Share catches, spots, and tips</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Account Modal Component  \nconst AccountModal = ({ isOpen, onClose, user, userStats }) => {\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n            <div className=\"w-full max-w-md terminal-card p-6 max-h-[80vh] overflow-y-auto\">\n                <div className=\"text-center mb-4\">\n                    <div className=\"text-lg font-bold terminal-text\">\n                        My Account\n                    </div>\n                    <div className=\"text-xs terminal-accent mt-1\">\n                        Device-based account\n                    </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                    {/* User Info */}\n                    <div className=\"bg-navy-50 p-4 rounded border\">\n                        <div className=\"text-center\">\n                            <div className=\"text-lg font-bold\" style={{ color: user?.color?.value || '#1e3a8a' }}>\n                                {user?.screenName}\n                            </div>\n                            <div className=\"text-xs terminal-accent mt-1\">\n                                Angler since {new Date(user?.createdAt || Date.now()).toLocaleDateString()}\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Stats */}\n                    <div className=\"grid grid-cols-2 gap-3\">\n                        <div className=\"bg-gray-50 p-3 rounded text-center\">\n                            <div className=\"text-lg font-bold terminal-text\">{userStats.posts.length}</div>\n                            <div className=\"text-xs terminal-accent\">Posts</div>\n                        </div>\n                        <div className=\"bg-gray-50 p-3 rounded text-center\">\n                            <div className=\"text-lg font-bold terminal-text\">{userStats.comments.length}</div>\n                            <div className=\"text-xs terminal-accent\">Comments</div>\n                        </div>\n                    </div>\n\n                    {/* Recent Posts */}\n                    <div className=\"space-y-2\">\n                        <div className=\"text-sm font-bold terminal-text\">Recent Posts</div>\n                        <div className=\"max-h-40 overflow-y-auto space-y-2\">\n                            {userStats.posts.slice(0, 5).map((post, index) => (\n                                <div key={index} className=\"bg-gray-50 p-2 rounded text-xs\">\n                                    <div className=\"font-mono\">{post.content}</div>\n                                    <div className=\"text-gray-500 mt-1\">\n                                        ▲ {post.upvotes || 0} ▼ {post.downvotes || 0}\n                                    </div>\n                                </div>\n                            ))}\n                            {userStats.posts.length === 0 && (\n                                <div className=\"text-xs terminal-accent text-center py-4\">\n                                    No posts yet. Start sharing your catches!\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    {/* Device Persistence Info */}\n                    <div className=\"bg-yellow-50 border border-yellow-200 p-3 text-xs\">\n                        <div className=\"font-bold text-yellow-800 mb-2\">Account Persistence</div>\n                        <div className=\"text-yellow-700 space-y-1\">\n                            <div>• Account saved to this device</div>\n                            <div>• Clear cache = lose account</div>\n                            <div>• Different device = new account</div>\n                        </div>\n                    </div>\n\n                    <div className=\"pt-2\">\n                        <button \n                            onClick={onClose}\n                            className=\"w-full h-10 px-3 py-2 border-2 border-navy-700 bg-white text-navy-700 text-sm font-bold hover:bg-navy-50 focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                        >\n                            Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Location Selection Modal Component\nconst LocationSelectionModal = ({ isOpen, onClose, onLocationSet, currentLocation }) => {\n    const [cityInput, setCityInput] = useState('');\n    const [selectedPreset, setSelectedPreset] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchResults, setSearchResults] = useState([]);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    if (!isOpen) return null;\n\n    // Handle city input change with autocomplete\n    const handleCityInputChange = (value) => {\n        setCityInput(value);\n        if (value.length >= 1) {\n            const results = searchCities(value);\n            setSearchResults(results);\n            setShowSuggestions(results.length > 0);\n        } else {\n            setSearchResults([]);\n            setShowSuggestions(false);\n        }\n    };\n\n    // Handle city selection from autocomplete\n    const handleCitySelect = (city) => {\n        setCityInput(`${city.name}, ${city.state}`);\n        setSearchResults([]);\n        setShowSuggestions(false);\n        onLocationSet({\n            lat: city.lat,\n            lng: city.lng,\n            name: `${city.name}, ${city.state}`\n        });\n        onClose();\n    };\n\n    // Handle manual city input submission with API fallback\n    const handleCitySubmit = async () => {\n        if (!cityInput.trim()) {\n            alert('Please enter a city name');\n            return;\n        }\n\n        setIsLoading(true);\n\n        // First try to find exact match in our database\n        const exactMatch = US_CITIES.find(city => \n            `${city.name}, ${city.state}`.toLowerCase() === cityInput.toLowerCase() ||\n            city.name.toLowerCase() === cityInput.toLowerCase()\n        );\n\n        if (exactMatch) {\n            onLocationSet({\n                lat: exactMatch.lat,\n                lng: exactMatch.lng,\n                name: `${exactMatch.name}, ${exactMatch.state}`\n            });\n            onClose();\n            setIsLoading(false);\n            return;\n        }\n\n        // If no exact match, try fuzzy search in our database\n        const fuzzyResults = searchCities(cityInput);\n        if (fuzzyResults.length > 0 && fuzzyResults[0].score > 50) {\n            const bestMatch = fuzzyResults[0];\n            onLocationSet({\n                lat: bestMatch.lat,\n                lng: bestMatch.lng,\n                name: `${bestMatch.name}, ${bestMatch.state}`\n            });\n            onClose();\n            setIsLoading(false);\n            return;\n        }\n\n        // Finally, try external geocoding API\n        try {\n            const apiResults = await geocodeWithAPI(cityInput);\n            if (apiResults.length > 0) {\n                const result = apiResults[0];\n                onLocationSet({\n                    lat: result.lat,\n                    lng: result.lng,\n                    name: `${result.name}, ${result.state}`\n                });\n                onClose();\n                setIsLoading(false);\n                return;\n            }\n        } catch (error) {\n            console.error('API geocoding failed:', error);\n        }\n\n        setIsLoading(false);\n        alert('City not found. Please check spelling or select from autocomplete suggestions.');\n    };\n\n    const stripedBassLocations = [\n        { id: 'current', name: 'Use Current Location', coords: null },\n        ...Object.entries(STRIPED_BASS_LOCATIONS).map(([key, location]) => ({\n            id: key,\n            name: location.name,\n            coords: location\n        }))\n    ];\n\n\n\n    const handlePresetSelect = (location) => {\n        if (location.id === 'current') {\n            onLocationSet(null); // null means use current GPS location\n        } else {\n            onLocationSet(location.coords);\n        }\n        onClose();\n    };\n\n    return (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n            <div className=\"w-full max-w-md terminal-card p-6\">\n                <div className=\"text-center mb-4\">\n                    <div className=\"text-lg font-bold terminal-text\">\n                        Set Location\n                    </div>\n                    <div className=\"text-xs terminal-accent mt-1\">\n                        Choose where to view fishing posts\n                    </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                    <div className=\"text-center text-xs terminal-accent\">Select a location:</div>\n\n                    {/* City/State Input with Autocomplete */}\n                    <div className=\"space-y-2 relative\">\n                        <label className=\"text-sm font-bold terminal-text block\">\n                            Enter City, State:\n                        </label>\n                        <div className=\"flex space-x-2\">\n                            <input\n                                type=\"text\"\n                                value={cityInput}\n                                onChange={(e) => handleCityInputChange(e.target.value)}\n                                placeholder=\"Boston, MA\"\n                                className=\"flex-1 h-10 px-3 py-2 terminal-input text-sm focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                                                            onFocus={() => cityInput.length >= 1 && setShowSuggestions(searchResults.length > 0)}\n                            onBlur={() => setTimeout(() => setShowSuggestions(false), 200)}\n                                onKeyPress={(e) => e.key === 'Enter' && handleCitySubmit()}\n                            />\n                            <button \n                                onClick={handleCitySubmit}\n                                disabled={!cityInput.trim() || isLoading}\n                                className=\"px-4 py-2 terminal-button text-sm font-bold hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-700 disabled:opacity-50\"\n                            >\n                                {isLoading ? '...' : 'Set'}\n                            </button>\n                        </div>\n                        \n                        {/* Autocomplete Suggestions */}\n                        {showSuggestions && searchResults.length > 0 && (\n                            <div className=\"absolute top-full left-0 right-0 bg-white border border-gray-300 rounded-md shadow-lg z-50 max-h-48 overflow-y-auto\">\n                                {searchResults.map((city, index) => (\n                                    <button\n                                        key={index}\n                                        onClick={() => handleCitySelect(city)}\n                                        className=\"w-full text-left px-3 py-2 text-sm hover:bg-navy-50 border-b border-gray-100 last:border-b-0\"\n                                    >\n                                        {city.name}, {city.state}\n                                    </button>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"text-center text-xs terminal-accent\">or choose a fishing hotspot:</div>\n\n                    {/* Striped Bass Fishing Locations */}\n                    <div className=\"space-y-2\">\n                        <label className=\"text-sm font-bold terminal-text block\">\n                            Northeast Striped Bass Locations:\n                        </label>\n                        <div className=\"space-y-1 max-h-40 overflow-y-auto\">\n                            {stripedBassLocations.map((location) => (\n                                <button\n                                    key={location.id}\n                                    onClick={() => handlePresetSelect(location)}\n                                    className=\"w-full text-left px-3 py-2 text-sm hover:bg-navy-50 border border-gray-300 hover:border-navy-300 focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                                >\n                                    {location.name}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"pt-2\">\n                        <button \n                            onClick={onClose}\n                            className=\"w-full h-10 px-3 py-2 border-2 border-navy-700 bg-white text-navy-700 text-sm font-bold hover:bg-navy-50 focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                        >\n                            Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Post Creation Modal Component\nconst PostCreationModal = ({ isOpen, onClose, onSubmit, newPostContent, setNewPostContent, isOnline }) => {\n    if (!isOpen) return null;\n\n    const handleSubmit = () => {\n        if (newPostContent.trim()) {\n            onSubmit();\n            onClose();\n        }\n    };\n\n    return (\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-4 z-50\">\n            <div className=\"w-full max-w-md terminal-card p-6\">\n                \n                <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                        <textarea\n                            value={newPostContent}\n                            onChange={(e) => setNewPostContent(e.target.value)}\n                            placeholder=\"Post your weather and/or fishing reports, questions from the water, callouts of bad behavior...\"\n                            className=\"w-full h-24 px-3 py-2 terminal-input text-sm font-mono resize-none focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                            maxLength={200}\n                            autoFocus\n                        />\n                        <div className=\"text-xs terminal-accent\">\n                            {newPostContent.length}/200 characters\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-2\">\n                        <button \n                            onClick={onClose}\n                            className=\"h-10 px-3 py-2 border-2 border-navy-700 bg-white text-navy-700 text-sm font-bold hover:bg-navy-50 focus:outline-none focus:ring-2 focus:ring-navy-700\"\n                        >\n                            Cancel\n                        </button>\n                        <button \n                            onClick={handleSubmit}\n                            disabled={!newPostContent.trim() || !isOnline}\n                            className=\"h-10 px-3 py-2 terminal-button text-sm font-bold hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-700 disabled:terminal-button:disabled\"\n                        >\n                            Post\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\n\n// Post Component with terminal styling\nconst Post = ({ post, onVote, onComment, onReport, userVotes, comments, showLocation = false }) => {\n    const [showComments, setShowComments] = useState(false);\n    const [commentText, setCommentText] = useState('');\n    const [isReported, setIsReported] = useState(false);\n    \n    const userVote = userVotes[post.id];\n    const postComments = comments.filter(comment => comment.post_id === post.id);\n    \n    const handleVote = (voteType) => {\n        onVote(post.id, voteType);\n    };\n    \n    const handleComment = () => {\n        if (commentText.trim() && commentText.length <= 200) {\n            onComment(post.id, commentText.trim());\n            setCommentText('');\n        }\n    };\n    \n    const handleReport = () => {\n        onReport(post.id);\n        setIsReported(true);\n        setTimeout(() => setIsReported(false), 3000);\n    };\n    \n    const getTimeAgo = (timestamp) => {\n        const now = new Date();\n        const postTime = new Date(timestamp);\n        const diff = Math.floor((now - postTime) / 1000);\n        \n        if (diff < 60) return 'NOW';\n        if (diff < 3600) return `${Math.floor(diff / 60)}M`;\n        if (diff < 86400) return `${Math.floor(diff / 3600)}H`;\n        return `${Math.floor(diff / 86400)}D`;\n    };\n    \n    // Hide posts with vote_count <= -5\n    if (post.vote_count <= -5) {\n        return null;\n    }\n    \n    return (\n        <div className=\"py-4 border-b border-gray-300 last:border-b-0\">\n            <div className=\"flex justify-between items-start mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                                    <div className=\"w-8 h-8 bg-navy-700 text-white flex items-center justify-center text-xs font-bold\">\n                    {post.username.charAt(0)}\n                </div>\n                    <div>\n                        <div className=\"flex items-center space-x-2\">\n                            <div className=\"font-bold text-sm\" style={{ color: post.user_color?.value || '#1e3a8a' }}>\n                                {post.username}\n                            </div>\n                        </div>\n                        <div className=\"text-xs terminal-accent\">\n                            {showLocation && post.location.name ? (\n                                <>📍 {post.location.name}</>\n                            ) : post.location.nearestCity ? (\n                                <>📍 {post.location.nearestCity}</>\n                            ) : (\n                                <>{post.location.distance}mi away</>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    onClick={handleReport}\n                    className={`text-xs px-2 py-1 ${\n                        isReported \n                            ? 'text-gray-500' \n                            : 'text-red-600 hover:text-red-700'\n                    } focus:outline-none`}\n                    disabled={isReported}\n                >\n                    {isReported ? '✓' : '🚩'}\n                </button>\n            </div>\n            \n            <div className=\"mb-3 p-3 bg-white border-2 border-navy-700\">\n                <div className=\"terminal-text text-sm font-mono\">{post.content}</div>\n            </div>\n            \n            <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                    <button\n                        onClick={() => handleVote('up')}\n                        className={`px-2 py-1 text-sm ${\n                            userVote === 1 \n                                ? 'text-green-600 font-bold' \n                                : 'text-gray-600 hover:text-green-600'\n                        } focus:outline-none`}\n                    >\n                        ▲ {post.upvotes}\n                    </button>\n                    \n                    <button\n                        onClick={() => handleVote('down')}\n                        className={`px-2 py-1 text-sm ${\n                            userVote === -1 \n                                ? 'text-red-600 font-bold' \n                                : 'text-gray-600 hover:text-red-600'\n                        } focus:outline-none`}\n                    >\n                        ▼ {post.downvotes}\n                    </button>\n                    \n                    <div className={`px-2 py-1 text-xs font-bold ${\n                        post.vote_count > 0 ? 'text-green-600' : \n                        post.vote_count < 0 ? 'text-red-600' : 'text-gray-600'\n                    }`}>\n                        {post.vote_count > 0 ? '+' : ''}{post.vote_count}\n                    </div>\n                </div>\n                \n                <button\n                    onClick={() => setShowComments(!showComments)}\n                    className=\"px-2 py-1 text-sm text-gray-600 hover:text-navy-700 focus:outline-none\"\n                >\n                    💬 {postComments.length}\n                </button>\n            </div>\n            \n            {showComments && (\n                <div className=\"mt-4 space-y-3 border-t-2 border-navy-700 pt-4\">\n                    {postComments.map(comment => (\n                        <div key={comment.id} className=\"bg-gray-100 border-2 border-navy-700 p-2\">\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                                <div className=\"w-4 h-4 bg-navy-700 text-white flex items-center justify-center text-xs font-bold\">\n                                    {comment.username.charAt(0)}\n                                </div>\n                                <span className=\"font-bold text-xs\" style={{ color: comment.user_color?.value || '#1e3a8a' }}>\n                                    {comment.username}\n                                </span>\n                                <span className=\"text-xs terminal-accent\">{getTimeAgo(comment.created_at)}</span>\n                            </div>\n                            <div className=\"terminal-text text-xs font-mono pl-6\">{comment.content}</div>\n                        </div>\n                    ))}\n                    \n                    <div className=\"flex space-x-2\">\n                        <textarea\n                            value={commentText}\n                            onChange={(e) => setCommentText(e.target.value)}\n                            placeholder=\"Add a comment...\"\n                            className=\"flex-1 h-16 px-2 py-1 terminal-input text-xs font-mono focus:outline-none focus:ring-2 focus:ring-navy-700 resize-none\"\n                            maxLength={200}\n                        />\n                        <button\n                            onClick={handleComment}\n                            disabled={!commentText.trim()}\n                            className=\"px-3 py-1 terminal-button text-xs font-bold hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-700 disabled:terminal-button:disabled\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                    <div className=\"text-xs terminal-accent\">\n                        {commentText.length}/200 characters\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Main App Component\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [userVotes, setUserVotes] = useState([]);\n    const [newPostContent, setNewPostContent] = useState('');\n    const [user, setUser] = useState(null);\n    const [userLocation, setUserLocation] = useState(null);\n\n    const [isOnline, setIsOnline] = useState(navigator.onLine);\n    const [showUsernameSetup, setShowUsernameSetup] = useState(false);\n\n    const [sortBy, setSortBy] = useState('hot'); // 'hot', 'new', or 'coastwide'\n    const [currentLocationName, setCurrentLocationName] = useState('');\n    const [showPostModal, setShowPostModal] = useState(false);\n    const [showLocationModal, setShowLocationModal] = useState(false);\n\n    const [customLocation, setCustomLocation] = useState(null);\n    const [showAccountModal, setShowAccountModal] = useState(false);\n    const [locationRadius, setLocationRadius] = useState(10);\n    const [userStats, setUserStats] = useState({ posts: [], comments: [] });\n    \n    // Real-time updates\n    const [lastUpdateCheck, setLastUpdateCheck] = useState(Date.now());\n    const eventSourceRef = useRef(null);\n    \n    // Rate limiting\n    const [lastPostTime, setLastPostTime] = useState(0);\n    const [lastVoteTime, setLastVoteTime] = useState(0);\n    const [postCount, setPostCount] = useState(0);\n    const [voteCount, setVoteCount] = useState(0);\n    \n    // Lazy loading\n    const [loadedPostsCount, setLoadedPostsCount] = useState(20); // Start with 20 posts\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n    \n    const textareaRef = useRef(null);\n    \n    // Real-time subscriptions\n    const [postsSubscription, setPostsSubscription] = useState(null);\n    const [commentsSubscription, setCommentsSubscription] = useState(null);\n    \n    // Device ID for anonymous operations\n    const deviceId = getDeviceId();\n    \n    // Check if user needs to set up username and load location settings\n    useEffect(() => {\n        const userData = localStorage.getItem('riprap_user');\n        if (!userData) {\n            setShowUsernameSetup(true);\n        } else {\n            setUser(JSON.parse(userData));\n        }\n        \n        // Load saved location settings\n        const locationSettings = loadLocationSettings();\n        setLocationRadius(locationSettings.locationRadius);\n        if (locationSettings.customLocation) {\n            setCustomLocation(locationSettings.customLocation);\n            setCurrentLocationName(locationSettings.customLocation.name);\n        }\n    }, []);\n    \n    // Initialize app\n    useEffect(() => {\n        if (!user) return;\n        \n        const initApp = async () => {\n            // Load posts and set up real-time subscriptions\n            try {\n                await loadPosts();\n                setupRealtimeSubscriptions();\n                \n            } catch (error) {\n                console.error('Failed to initialize app:', error);\n            }\n            \n            // Get user location - only use GPS if no saved custom location\n            const savedSettings = loadLocationSettings();\n            if (savedSettings.customLocation) {\n                // Use saved custom location\n                setUserLocation(savedSettings.customLocation);\n                setCurrentLocationName(savedSettings.customLocation.name);\n                console.log('Using saved custom location:', savedSettings.customLocation);\n            } else {\n                // No saved location, try GPS\n                if (navigator.geolocation) {\n                    navigator.geolocation.getCurrentPosition(\n                        (position) => {\n                            const lat = position.coords.latitude;\n                            const lng = position.coords.longitude;\n                            setUserLocation({ lat, lng });\n                            setCurrentLocationName(getApproximateLocation(lat, lng));\n                            console.log('GPS location acquired:', { lat, lng });\n                        },\n                        (error) => {\n                            console.error('GPS location failed:', error.message);\n                            // Fallback to a default location (Cape Cod) if GPS fails\n                            const fallbackLocation = STRIPED_BASS_LOCATIONS['cape-cod-ma'];\n                            setUserLocation(fallbackLocation);\n                            setCurrentLocationName(`${fallbackLocation.name} (Default)`);\n                        },\n                        {\n                            enableHighAccuracy: true,\n                            timeout: 10000,\n                            maximumAge: 300000 // 5 minutes cache\n                        }\n                    );\n                } else {\n                    console.warn('Geolocation not supported');\n                    // Fallback to a default location\n                    const fallbackLocation = STRIPED_BASS_LOCATIONS['cape-cod-ma'];\n                    setUserLocation(fallbackLocation);\n                    setCurrentLocationName(`${fallbackLocation.name} (Default)`);\n                }\n            }\n        };\n        \n        initApp();\n        \n        // Online/offline status\n        const handleOnline = () => setIsOnline(true);\n        const handleOffline = () => setIsOnline(false);\n        \n        window.addEventListener('online', handleOnline);\n        window.addEventListener('offline', handleOffline);\n        \n        return () => {\n            window.removeEventListener('online', handleOnline);\n            window.removeEventListener('offline', handleOffline);\n        };\n    }, [user]);\n\n    // Recalculate user stats when data changes\n    useEffect(() => {\n        if (user && posts && comments) {\n            calculateUserStats();\n        }\n    }, [posts, comments, user, userVotes]);\n\n    // Save location radius when it changes\n    useEffect(() => {\n        if (locationRadius !== 10) { // Only save if different from default\n            saveLocationSettings(customLocation, locationRadius);\n        }\n    }, [locationRadius, customLocation]);\n\n    // Reload posts when location or radius changes\n    useEffect(() => {\n        if (!user || !userLocation) return;\n        \n        loadPosts();\n        setupRealtimeSubscriptions();\n        \n        return () => {\n            if (postsSubscription) {\n                subscriptionsService.unsubscribe(postsSubscription);\n            }\n        };\n    }, [user, userLocation, locationRadius, sortBy]);\n    \n    // Infinite scroll for lazy loading\n    useEffect(() => {\n        const handleScroll = () => {\n            if (sortBy === 'coastwide') return; // No infinite scroll for coastwide\n            \n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n            const scrollHeight = document.documentElement.scrollHeight;\n            const clientHeight = window.innerHeight;\n            \n            if (scrollTop + clientHeight >= scrollHeight - 1000 && !isLoadingMore) {\n                setIsLoadingMore(true);\n                setTimeout(() => {\n                    setLoadedPostsCount(prev => prev + 10);\n                    setIsLoadingMore(false);\n                }, 500); // Simulate loading delay\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, [sortBy, isLoadingMore]);\n    \n    // Reset loaded posts count when sort changes\n    useEffect(() => {\n        setLoadedPostsCount(20);\n    }, [sortBy]);\n    \n    // Handle username setup\n    const handleUsernameSet = (username, color) => {\n        const userData = getUserIdentity(username, color);\n        setUser(userData);\n        setShowUsernameSetup(false);\n    };\n\n\n\n    // Calculate user statistics\n    const calculateUserStats = () => {\n        if (!user || !posts || !comments) return;\n        \n        const userPosts = posts.filter(post => post.username === user.screenName);\n        const userComments = comments.filter(comment => comment.username === user.screenName);\n        \n        setUserStats({ posts: userPosts, comments: userComments });\n    };\n    \n    // Handle location change\n    const handleLocationSet = async (newLocation) => {\n        if (!newLocation) {\n            // Use current GPS location\n            if ('geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const coords = {\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude\n                        };\n                        setUserLocation(coords);\n                        setCustomLocation(null);\n                        const locationName = getApproximateLocation(coords.lat, coords.lng);\n                        setCurrentLocationName(locationName);\n                        // Save settings (null custom location means use GPS)\n                        saveLocationSettings(null, locationRadius);\n                    },\n                    () => {\n                        console.error('Failed to get current location');\n                        setCustomLocation(null);\n                    }\n                );\n            }\n        } else {\n            // Use custom location\n            setUserLocation(newLocation);\n            setCustomLocation(newLocation);\n            setCurrentLocationName(newLocation.name);\n            // Save settings\n            saveLocationSettings(newLocation, locationRadius);\n        }\n    };\n\n\n    \n    // Load posts from localStorage\n    const loadPosts = async () => {\n        if (!userLocation) return;\n        \n        try {\n            const nearbyPosts = await postsService.getNearbyPosts(\n                userLocation.lat, \n                userLocation.lng, \n                locationRadius\n            );\n            \n            // Sort posts based on selected criteria\n            const sortedPosts = sortPosts(nearbyPosts);\n            setPosts(sortedPosts);\n            \n            // Load user votes for these posts\n            const postIds = sortedPosts.map(post => post.id);\n            const votes = await votesService.getVotesForPosts(postIds, deviceId);\n            setUserVotes(votes);\n            \n            // Load comments for all posts\n            const allComments = [];\n            for (const post of sortedPosts) {\n                const postComments = await commentsService.getComments(post.id);\n                allComments.push(...postComments);\n            }\n            setComments(allComments);\n            \n        } catch (error) {\n            console.error('Error loading posts:', error);\n        }\n    };\n\n    // Setup real-time subscriptions\n    const setupRealtimeSubscriptions = () => {\n        if (!userLocation) return;\n        \n        // Unsubscribe from previous subscription\n        if (postsSubscription) {\n            subscriptionsService.unsubscribe(postsSubscription);\n        }\n        \n        // Subscribe to new posts and updates\n        const newSubscription = subscriptionsService.subscribeToNearbyPosts(\n            userLocation.lat,\n            userLocation.lng,\n            locationRadius,\n            (newPost) => {\n                // Add new post to the top\n                setPosts(prevPosts => {\n                    const updated = [newPost, ...prevPosts];\n                    return sortPosts(updated);\n                });\n            },\n            (updatedPost) => {\n                // Update existing post\n                setPosts(prevPosts => {\n                    const updated = prevPosts.map(post => \n                        post.id === updatedPost.id ? updatedPost : post\n                    );\n                    return sortPosts(updated);\n                });\n            }\n        );\n        \n        setPostsSubscription(newSubscription);\n    };\n\n    // Sort posts based on selected criteria\n    const sortPosts = (postsToSort) => {\n        const sorted = [...postsToSort];\n        switch (sortBy) {\n            case 'newest':\n            case 'new':\n                return sorted.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            case 'oldest':\n                return sorted.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n            case 'hot':\n            case 'topVoted':\n                return sorted.sort((a, b) => (b.vote_count || 0) - (a.vote_count || 0));\n            case 'mostComments':\n                return sorted.sort((a, b) => (b.comment_count || 0) - (a.comment_count || 0));\n            case 'closest':\n                return sorted.sort((a, b) => (a.distance_miles || 0) - (b.distance_miles || 0));\n            default:\n                return sorted;\n        }\n    };\n    \n    // Filter and sort posts by location and criteria\n    const getFilteredPosts = () => {\n        if (sortBy === 'coastwide') {\n            // Coastwide: Return top 3 posts from across the East Coast with location info\n            const allPostsWithDistance = posts.map(post => ({\n                ...post,\n                location: {\n                    ...post.location,\n                    distance: userLocation ? Math.round(calculateDistance(\n                        userLocation.lat, userLocation.lng, \n                        post.location.lat, post.location.lng\n                    ) * 10) / 10 : 0,\n                    // Ensure nearestCity is available for coastwide display\n                    nearestCity: post.location.nearestCity || getNearestCityState(post.location.lat, post.location.lng),\n                    name: post.location.nearestCity || getNearestCityState(post.location.lat, post.location.lng)\n                }\n            }));\n            \n            // Sort by hot score and take top 3\n            const topPosts = allPostsWithDistance\n                .filter(post => {\n                    // Only include East Coast posts (rough longitude filter)\n                    return post.location.lng > -82 && post.location.lng < -66;\n                })\n                .sort((a, b) => {\n                    const aComments = comments.filter(c => c.post_id === a.id).length;\n                    const bComments = comments.filter(c => c.post_id === b.id).length;\n                    const aAge = (Date.now() - new Date(a.created_at)) / (1000 * 60 * 60);\n                    const bAge = (Date.now() - new Date(b.created_at)) / (1000 * 60 * 60);\n                    \n                    const aHotScore = a.vote_count + aComments * 3 - aAge * 0.05; // Slightly different weights for coastwide\n                    const bHotScore = b.vote_count + bComments * 3 - bAge * 0.05;\n                    \n                    return bHotScore - aHotScore;\n                })\n                .slice(0, 3);\n            \n            return topPosts;\n        }\n        \n        if (!userLocation) return posts.slice(0, loadedPostsCount);\n        \n        // Use custom location if set, otherwise use GPS location\n        const effectiveLocation = customLocation || userLocation;\n        \n        let filteredPosts = posts.filter(post => {\n            if (post.location.lat && post.location.lng) {\n                const distance = calculateDistance(\n                    effectiveLocation.lat, effectiveLocation.lng,\n                    post.location.lat, post.location.lng\n                );\n                return distance <= locationRadius;\n            }\n            return true;\n        });\n        \n        // Add distance calculation and ensure nearestCity\n        filteredPosts = filteredPosts.map(post => ({\n            ...post,\n            location: {\n                ...post.location,\n                distance: Math.round(calculateDistance(effectiveLocation?.lat || 0, effectiveLocation?.lng || 0, post.location.lat, post.location.lng) * 10) / 10,\n                nearestCity: post.location.nearestCity || getNearestCityState(post.location.lat, post.location.lng)\n            }\n        }));\n        \n        // Sort by criteria\n        if (sortBy === 'hot') {\n            // Hot algorithm: vote_count + comment count + recency factor\n            filteredPosts.sort((a, b) => {\n                const aComments = comments.filter(c => c.post_id === a.id).length;\n                const bComments = comments.filter(c => c.post_id === b.id).length;\n                const aAge = (Date.now() - new Date(a.created_at)) / (1000 * 60 * 60); // hours\n                const bAge = (Date.now() - new Date(b.created_at)) / (1000 * 60 * 60); // hours\n                \n                const aHotScore = a.vote_count + aComments * 2 - aAge * 0.1;\n                const bHotScore = b.vote_count + bComments * 2 - bAge * 0.1;\n                \n                return bHotScore - aHotScore;\n            });\n        } else {\n            // New: sort by created_at\n            filteredPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n        }\n        \n        // Apply lazy loading limit\n        return filteredPosts.slice(0, loadedPostsCount);\n    };\n    \n    // Create new post\n    const handleCreatePost = async () => {\n        if (!newPostContent.trim() || !user || !userLocation) return;\n        \n        // Rate limiting check\n        const rateLimitCheck = checkRateLimit(\n            lastPostTime, \n            RATE_LIMITS.POST_COOLDOWN, \n            postCount, \n            RATE_LIMITS.MAX_POSTS_PER_HOUR,\n            3600000 // 1 hour\n        );\n        \n        if (!rateLimitCheck.allowed) {\n            alert(`Please wait ${rateLimitCheck.remainingTime} seconds before posting again.`);\n            return;\n        }\n        \n        // Content moderation check\n        const moderationResult = moderateContent(newPostContent.trim());\n        if (!moderationResult.allowed) {\n            alert(`Post blocked: ${moderationResult.issues.join(', ')}`);\n            return;\n        }\n        \n        try {\n            await postsService.createPost(\n                newPostContent.trim(),\n                user.screenName,\n                user.color,\n                userLocation.lat,\n                userLocation.lng,\n                currentLocationName\n            );\n            \n            setNewPostContent('');\n            setShowPostModal(false);\n            // Reload posts to show the new post\n            await loadPosts();\n            \n            // Update rate limiting counters\n            setLastPostTime(Date.now());\n            setPostCount(prev => prev + 1);\n        } catch (error) {\n            console.error('Failed to create post:', error);\n            alert('Failed to create post. Please try again.');\n        }\n    };\n    \n    // Handle voting\n    const handleVote = async (postId, voteType) => {\n        if (!user) return;\n        \n        // Rate limiting check\n        const rateLimitCheck = checkRateLimit(\n            lastVoteTime, \n            RATE_LIMITS.VOTE_COOLDOWN, \n            voteCount, \n            RATE_LIMITS.MAX_VOTES_PER_MINUTE,\n            60000 // 1 minute\n        );\n        \n        if (!rateLimitCheck.allowed) {\n            console.log(`Vote rate limited: ${rateLimitCheck.remainingTime}s remaining`);\n            return;\n        }\n        \n        try {\n            const currentVote = userVotes[postId] || 0;\n            \n            // Convert 'up'/'down' to 1/-1/0 for storage\n            let voteValue = 0;\n            if (voteType === 'up') voteValue = 1;\n            else if (voteType === 'down') voteValue = -1;\n            \n            // Toggle vote if same type, otherwise set to new type\n            const newVoteValue = currentVote === voteValue ? 0 : voteValue;\n            \n            await votesService.castVote(postId, deviceId, newVoteValue);\n            \n            // Update local state\n            setUserVotes(prev => ({\n                ...prev,\n                [postId]: newVoteValue\n            }));\n            \n            // Reload posts to reflect updated vote counts\n            await loadPosts();\n            \n            // Update rate limiting counters\n            setLastVoteTime(Date.now());\n            setVoteCount(prev => prev + 1);\n        } catch (error) {\n            console.error('Failed to vote:', error);\n        }\n    };\n    \n    // Handle commenting\n    const handleComment = async (postId, content) => {\n        if (!user) return;\n        \n        try {\n            await commentsService.createComment(\n                postId,\n                content,\n                user.screenName,\n                user.color\n            );\n            \n            // Reload comments to show the new comment\n            const allComments = [];\n            for (const post of posts) {\n                const postComments = await commentsService.getComments(post.id);\n                allComments.push(...postComments);\n            }\n            setComments(allComments);\n        } catch (error) {\n            console.error('Failed to comment:', error);\n        }\n    };\n    \n    // Handle reporting\n    const handleReport = (postId) => {\n        console.log('Post reported:', postId);\n        // In a real app, this would send to moderation\n    };\n    \n    const filteredPosts = getFilteredPosts();\n    \n    // Show username setup screen if needed\n    if (showUsernameSetup) {\n        return <UsernameSetup onUsernameSet={handleUsernameSet} />;\n    }\n    \n    return (\n        <div className=\"min-h-screen bg-gray-50 terminal-text overflow-x-hidden\">\n            {/* Account Modal */}\n            <AccountModal\n                isOpen={showAccountModal}\n                onClose={() => setShowAccountModal(false)}\n                user={user}\n                userStats={userStats}\n            />\n\n            {/* Location Selection Modal */}\n            <LocationSelectionModal\n                isOpen={showLocationModal}\n                onClose={() => setShowLocationModal(false)}\n                onLocationSet={handleLocationSet}\n                currentLocation={userLocation}\n            />\n\n            {/* Post Creation Modal */}\n            <PostCreationModal\n                isOpen={showPostModal}\n                onClose={() => setShowPostModal(false)}\n                onSubmit={handleCreatePost}\n                newPostContent={newPostContent}\n                setNewPostContent={setNewPostContent}\n                isOnline={isOnline}\n            />\n\n\n\n            {/* Floating Action Button */}\n            <button\n                onClick={() => setShowPostModal(true)}\n                className=\"fixed bottom-4 right-4 sm:bottom-6 sm:right-6 w-12 h-12 sm:w-14 sm:h-14 bg-navy-700 text-white rounded-full shadow-lg hover:bg-navy-800 focus:outline-none focus:ring-2 focus:ring-navy-300 flex items-center justify-center text-xl sm:text-2xl z-40\"\n                style={{ maxWidth: 'calc(100vw - 2rem)' }}\n                title=\"Create new post\"\n            >\n                +\n            </button>\n            \n            <div className=\"max-w-2xl mx-auto px-2 sm:px-0\">\n                {/* Header */}\n                <div className=\"terminal-header sticky top-0 z-40 p-3 sm:p-4\">\n                    <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                            <div className=\"text-2xl font-extrabold tracking-widest\">RIPRAP</div>\n                            <div className=\"hidden sm:block\">\n                                <div className=\"text-xs\">Share the Shore, Spill the Lore</div>\n                            </div>\n                        </div>\n                        <div className=\"flex items-center space-x-1 sm:space-x-2\">\n                            <button\n                                onClick={() => setShowAccountModal(true)}\n                                className=\"flex items-center space-x-1 text-xs sm:text-sm font-bold px-3 py-2 bg-white border-2 border-navy-600 rounded hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-navy-300 shadow-sm\"\n                                style={{ color: user?.color?.value || '#1e3a8a' }}\n                            >\n                                <span>{user?.screenName}</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                {/* Location Info & Sort Categories */}\n                <div className=\"p-3 sm:p-4 space-y-3 sm:space-y-4\">\n                    {/* Location Display with Radius Slider */}\n                    <div className=\"p-3 terminal-card\">\n                        <div className=\"space-y-3\">\n                            <button \n                                onClick={() => setShowLocationModal(true)}\n                                className=\"w-full text-left hover:bg-navy-50 focus:outline-none focus:ring-2 focus:ring-navy-300 rounded p-2\"\n                            >\n                                <div className=\"text-sm font-bold terminal-text mb-1\">📍 Local Area:</div>\n                                <div className=\"text-xs terminal-accent\">\n                                    {currentLocationName}\n                                </div>\n                                <div className=\"text-xs text-navy-600 mt-1\">\n                                    Click to change location\n                                </div>\n                            </button>\n                            \n                            {/* Radius Slider */}\n                            <div className=\"space-y-2\">\n                                <label className=\"text-sm font-bold terminal-text block\">\n                                    Search Radius: {locationRadius} miles\n                                </label>\n                                <input\n                                    type=\"range\"\n                                    min=\"5\"\n                                    max=\"100\"\n                                    step=\"5\"\n                                    value={locationRadius}\n                                    onChange={(e) => setLocationRadius(parseInt(e.target.value))}\n                                    className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider-navy\"\n                                />\n                                <div className=\"flex justify-between text-xs terminal-accent\">\n                                    <span>5 mi</span>\n                                    <span>Show posts within {locationRadius} miles</span>\n                                    <span>100 mi</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    {/* Sort Categories */}\n                    <div className=\"terminal-card p-3\">\n                        <div className=\"text-sm font-bold terminal-text mb-2\">Sort by:</div>\n                        <div className=\"grid grid-cols-3 gap-2\">\n                            <button\n                                onClick={() => setSortBy('hot')}\n                                className={`px-3 py-2 text-sm font-bold border-2 ${\n                                    sortBy === 'hot' \n                                        ? 'terminal-button' \n                                        : 'border-navy-600 bg-white text-navy-600 hover:bg-navy-50'\n                                } focus:outline-none focus:ring-2 focus:ring-navy-600`}\n                            >\n                                🔥 Hot\n                            </button>\n                            <button\n                                onClick={() => setSortBy('new')}\n                                className={`px-3 py-2 text-sm font-bold border-2 ${\n                                    sortBy === 'new' \n                                        ? 'terminal-button' \n                                        : 'border-navy-600 bg-white text-navy-600 hover:bg-navy-50'\n                                } focus:outline-none focus:ring-2 focus:ring-navy-600`}\n                            >\n                                ⭐ New\n                            </button>\n                            <button\n                                onClick={() => setSortBy('coastwide')}\n                                className={`px-3 py-2 text-sm font-bold border-2 ${\n                                    sortBy === 'coastwide' \n                                        ? 'terminal-button' \n                                        : 'border-navy-600 bg-white text-navy-600 hover:bg-navy-50'\n                                } focus:outline-none focus:ring-2 focus:ring-navy-600`}\n                            >\n                                🌊 Coastwide\n                            </button>\n                        </div>\n                        {sortBy === 'coastwide' && (\n                            <div className=\"text-xs terminal-accent mt-2\">\n                                Top 3 posts from across the East Coast\n                            </div>\n                        )}\n                    </div>\n                </div>\n                \n\n                \n                {/* Posts Feed */}\n                <div className=\"p-4\">\n\n                    \n                    {filteredPosts.length === 0 ? (\n                        <div className=\"p-8 text-center\">\n                            <div className=\"text-4xl mb-4\">🎣</div>\n                            <div className=\"text-sm font-bold terminal-text mb-2\">\n                                {sortBy === 'coastwide' ? 'No trending posts found' : 'No posts in your area'}\n                            </div>\n                            <div className=\"text-xs terminal-accent\">\n                                {sortBy === 'coastwide' \n                                    ? 'Check back later for trending discussions!' \n                                    : 'Be the first to share what\\'s happening on the water!'\n                                }\n                            </div>\n                        </div>\n                    ) : (\n                        <>\n                            {/* Regular Posts */}\n                            {filteredPosts.map((post, index) => (\n                                <div key={post.id}>\n                                    <Post\n                                        post={post}\n                                        onVote={handleVote}\n                                        onComment={handleComment}\n                                        onReport={handleReport}\n                                        userVotes={userVotes}\n                                        comments={comments}\n                                        showLocation={sortBy === 'coastwide'}\n                                    />\n                                    {sortBy === 'coastwide' && index < filteredPosts.length - 1 && (\n                                        <div className=\"border-t-2 border-navy-300 my-4\"></div>\n                                    )}\n                                </div>\n                            ))}\n                            \n                            {/* Loading indicator for infinite scroll */}\n                            {isLoadingMore && sortBy !== 'coastwide' && (\n                                <div className=\"text-center py-4\">\n                                    <div className=\"text-sm terminal-accent\">Loading more posts...</div>\n                                </div>\n                            )}\n                            \n                            {/* End of posts indicator */}\n                            {!isLoadingMore && sortBy !== 'coastwide' && filteredPosts.length >= loadedPostsCount && (\n                                <div className=\"text-center py-4\">\n                                    <div className=\"text-xs terminal-accent\">Scroll down for more posts</div>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </div>\n                \n                {/* Footer */}\n                <div className=\"p-4 text-center text-xs terminal-accent bg-gray-100 border-t-2 border-navy-700\">\n                    <div>🎣 Tight lines and good catches!</div>\n                    <div>Anonymous • Location-based • Fishing community</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","COMMENT_EMOJIS","generateEmojiIdentifier","calculateDistance","lat1","lon1","lat2","lon2","dLat","dLon","STORAGE_KEYS","getFromStorage","key","data","error","saveToStorage","generateId","postsService","latitude","longitude","radiusMiles","nearbyPosts","post","distance","content","username","userColor","locationName","posts","newPost","postId","upvotes","downvotes","postIndex","commentCount","commentsService","comment","comments","newComment","postComments","votesService","deviceId","vote","v","voteType","votes","existingVoteIndex","voteData","postVotes","postIds","allVotes","userVotes","subscriptionsService","onNewPost","onPostUpdate","onNewComment","subscription","STRIPED_BASS_LOCATIONS","US_CITIES","searchCities","query","lowercaseQuery","city","cityName","stateName","fullName","score","geocodeWithAPI","item","_a","getDeviceId","generateScreenName","adjectives","nouns","numbers","adj","noun","USERNAME_COLORS","getUserIdentity","customUsername","selectedColor","user","defaultColor","saveLocationSettings","location","radius","settings","loadLocationSettings","RATE_LIMITS","checkRateLimit","lastTime","cooldown","count","maxCount","timeWindow","timeSinceLastAction","BLOCKED_WORDS","SUSPICIOUS_PATTERNS","moderateContent","lowerContent","issues","foundBlockedWords","word","pattern","words","wordCounts","cleanWord","getApproximateLocation","lat","lng","closestLocation","closestDistance","getNearestCityState","closestCity","FISHING_ASCII","UsernameSetup","onUsernameSet","setUsername","useState","setSelectedColor","handleContinue","generateNew","jsxs","jsx","color","AccountModal","isOpen","onClose","userStats","index","LocationSelectionModal","onLocationSet","currentLocation","cityInput","setCityInput","isLoading","setIsLoading","searchResults","setSearchResults","showSuggestions","setShowSuggestions","handleCityInputChange","value","results","handleCitySelect","handleCitySubmit","exactMatch","fuzzyResults","bestMatch","apiResults","result","stripedBassLocations","handlePresetSelect","PostCreationModal","onSubmit","newPostContent","setNewPostContent","isOnline","handleSubmit","Post","onVote","onComment","onReport","showLocation","showComments","setShowComments","commentText","setCommentText","isReported","setIsReported","userVote","handleVote","handleComment","handleReport","getTimeAgo","timestamp","now","postTime","diff","Fragment","App","setPosts","setComments","setUserVotes","setUser","userLocation","setUserLocation","setIsOnline","showUsernameSetup","setShowUsernameSetup","sortBy","setSortBy","currentLocationName","setCurrentLocationName","showPostModal","setShowPostModal","showLocationModal","setShowLocationModal","customLocation","setCustomLocation","showAccountModal","setShowAccountModal","locationRadius","setLocationRadius","setUserStats","useRef","lastPostTime","setLastPostTime","lastVoteTime","setLastVoteTime","postCount","setPostCount","voteCount","setVoteCount","loadedPostsCount","setLoadedPostsCount","isLoadingMore","setIsLoadingMore","postsSubscription","setPostsSubscription","useEffect","userData","locationSettings","loadPosts","setupRealtimeSubscriptions","savedSettings","position","fallbackLocation","handleOnline","handleOffline","calculateUserStats","handleScroll","scrollTop","scrollHeight","clientHeight","prev","handleUsernameSet","userPosts","userComments","handleLocationSet","newLocation","coords","sortedPosts","sortPosts","allComments","newSubscription","prevPosts","updated","updatedPost","postsToSort","sorted","getFilteredPosts","aComments","bComments","aAge","bAge","aHotScore","effectiveLocation","filteredPosts","handleCreatePost","rateLimitCheck","moderationResult","currentVote","voteValue","newVoteValue","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}